{"version":3,"sources":["../node_modules/@iconify/icons-eva/edit-fill.js","components/_dashboard/tracabiliteCompany/list/TracabiliteCompanyListHead.js","components/_dashboard/tracabiliteCompany/list/TracabiliteCompanyListToolbar.js","pages/dashboard/TracabiliteCompany.js"],"names":["exports","__esModule","default","AgentListHead","_ref","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","_jsx","TableHead","children","TableRow","map","headCell","TableCell","align","alignRight","sortDirection","id","_jsxs","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","styled","Toolbar","theme","height","display","justifyContent","padding","spacing","TracabiliteListToolbar","_ref2","onChangeDate1","onChangeDate2","handleGo","value","value1","loading","setLoading","useTheme","palette","mode","Stack","xs","md","py","px","DatePicker","inputFormat","onChange","newValue","renderInput","params","TextField","fullWidth","maxWidth","Tooltip","title","LoadingButton","variant","TABLE_HEAD","descendingComparator","a","b","TracabiliteCompany","_PATH_DASHBOARD$user","user","useAuth","themeStretch","useSettings","dispatch","useDispatch","tracabiliteCompany","useSelector","state","page","setPage","useState","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","setValue","Date","setValue1","async","getTracabiliteCompanies","fDate","useEffect","emptyRows","Math","max","length","filteredTCompanys","array","comparator","query","stabilizedThis","el","index","sort","filter","_tracabiliteCompany","first_name","toLowerCase","indexOf","applySortFilter","getComparator","isTracabiliteCompanyNotFound","Page","Container","HeaderBreadcrumbs","heading","links","name","href","PATH_DASHBOARD","root","tracabilite_company","Card","TracabiliteCompanyListToolbar","datavalue","Scrollbar","TableContainer","minWidth","Table","TracabiliteCompanyListHead","role","handleRequestSort","target","checked","newSelecteds","n","TableBody","slice","ite","isItemSelected","hover","tabIndex","component","scope","alignItems","Avatar","alt","companyName","src","company_photo","Typography","noWrap","action_name","fDateTime","created_on","style","colSpan","SearchNotFound","searchQuery","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/67.0cf44ebc.chunk.js","sourcesContent":["const data = {\n\t\"width\": 24,\n\t\"height\": 24,\n\t\"body\": \"<g id=\\\"evaEditFill0\\\"><g id=\\\"evaEditFill1\\\"><path id=\\\"evaEditFill2\\\" fill=\\\"currentColor\\\" d=\\\"M19.4 7.34L16.66 4.6A2 2 0 0 0 14 4.53l-9 9a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71ZM16 10.68L13.32 8l1.95-2L18 8.73Z\\\"/></g></g>\"\n};\nexports.__esModule = true;\nexports.default = data;\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nAgentListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function AgentListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Stack, Toolbar, Tooltip, IconButton, Typography, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 6)\n}));\n\n// ----------------------------------------------------------------------\n\nTracabiliteListToolbar.propTypes = {\n  value: PropTypes.string,\n  value1: PropTypes.string,\n  onChangeDate1: PropTypes.func,\n  onChangeDate2: PropTypes.func,\n  loading: PropTypes.bool,\n  setLoading: PropTypes.func,\n  handleGo: PropTypes.func\n};\n\nexport default function TracabiliteListToolbar({\n  onChangeDate1,\n  onChangeDate2,\n  handleGo,\n  value,\n  value1,\n  loading,\n  setLoading\n}) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <Stack spacing={2} direction={{ xs: 'column', md: 'row' }} sx={{ py: 2.5, px: 3 }}>\n      <DatePicker\n        label=\"Date de début\"\n        value={value}\n        inputFormat=\"yyyy-MM-dd\"\n        onChange={(newValue) => {\n          onChangeDate1(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: 300 }\n            }}\n          />\n        )}\n      />\n      <DatePicker\n        label=\"Date de fin\"\n        value={value1}\n        inputFormat=\"yyyy-MM-dd\"\n        onChange={(newValue) => {\n          onChangeDate2(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: 300 }\n            }}\n          />\n        )}\n      />\n      <Tooltip title=\"Filter list\">\n        <LoadingButton sx={{ py: 2, px: 3 }} loading={loading} variant=\"contained\" onClick={handleGo}>\n          Filtrer\n        </LoadingButton>\n      </Tooltip>\n    </Stack>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getTracabiliteCompanies } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport {\n  TracabiliteCompanyListHead,\n  TracabiliteCompanyListToolbar,\n  TracabiliteCompanyMoreMenu\n} from '../../components/_dashboard/tracabiliteCompany/list';\nimport { fDate, fDateTime } from '../../utils/formatTime';\nimport useAuth from '../../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'action_name', label: 'Action', alignRight: false },\n  { id: 'date', label: 'Date', alignRight: false },\n  { id: '' },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array?.map((el, index) => [el, index]);\n  stabilizedThis?.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(\n      array,\n      (_tracabiliteCompany) => _tracabiliteCompany?.first_name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n  return stabilizedThis?.map((el) => el[0]);\n}\n\nexport default function TracabiliteCompany() {\n  const { user } = useAuth();\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { tracabiliteCompany } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('first_name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [value, setValue] = useState(new Date());\n  const [value1, setValue1] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  const onChangeDate1 = (datavalue) => {\n    setValue(datavalue);\n  };\n  const onChangeDate2 = (datavalue) => {\n    setValue1(datavalue);\n  };\n  const handleGo = async () => {\n    setLoading(true);\n    await dispatch(getTracabiliteCompanies(fDate(value), fDate(value1)));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGo();\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = tracabiliteCompany?.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - tracabiliteCompany.length) : 0;\n\n  const filteredTCompanys = applySortFilter(tracabiliteCompany, getComparator(order, orderBy), filterName);\n\n  const isTracabiliteCompanyNotFound = filteredTCompanys?.length === 0;\n\n  return (\n    <Page title=\"Tracabilite Company: List | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Liste des tracabilites compagnie\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Liste Tracabilites', href: PATH_DASHBOARD.user?.tracabilite_company },\n            { name: 'Listes' }\n          ]}\n        />\n\n        <Card>\n          <TracabiliteCompanyListToolbar\n            value={value}\n            value1={value1}\n            onChangeDate1={onChangeDate1}\n            onChangeDate2={onChangeDate2}\n            handleGo={handleGo}\n            loading={loading}\n            setLoading={setLoading}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <TracabiliteCompanyListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={[\n                    ...(user?.role === 'superuser' ? [{ id: 'company', label: 'Compagnie', alignRight: false }] : []),\n                    ...TABLE_HEAD\n                  ]}\n                  rowCount={tracabiliteCompany?.length}\n                  numSelected={selected?.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {(rowsPerPage > 0\n                    ? filteredTCompanys?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : filteredTCompanys\n                  )?.map((ite) => {\n                    const isItemSelected = selected.indexOf(ite?.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={ite?.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        {user?.role === 'superuser' && (\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                              <Avatar alt={ite?.companyName} src={ite?.company_photo} />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                {ite?.companyName}\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n                        )}\n                        <TableCell align=\"left\">{ite?.action_name}</TableCell>\n                        <TableCell align=\"left\">{fDateTime(ite?.created_on)}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isTracabiliteCompanyNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            labelRowsPerPage=\"Lignes par page\"\n            rowsPerPageOptions={[25, 50, 75, 100, { label: 'Tout', value: -1 }]}\n            component=\"div\"\n            count={tracabiliteCompany?.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}