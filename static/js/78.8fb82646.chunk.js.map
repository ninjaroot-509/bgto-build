{"version":3,"sources":["components/_dashboard/infoTirage/list/InfoTirageListHead.js","components/_dashboard/infoTirage/list/InfoTirageListToolbar.js","components/_dashboard/infoTirage/list/InfoTirageMoreMenu.js","pages/dashboard/InfoTirages.js"],"names":["InfoTirageListHead","_ref","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","_jsx","TableHead","children","TableRow","map","headCell","TableCell","align","alignRight","sortDirection","id","_jsxs","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","RootStyle","styled","Toolbar","theme","height","display","justifyContent","padding","spacing","SearchStyle","OutlinedInput","_ref2","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","concat","palette","grey","TypeTirageListToolbar","_ref3","loading","handlerefresh","filterName","onFilterName","value","onChange","placeholder","startAdornment","InputAdornment","position","component","Icon","icon","searchFill","color","Tooltip","title","LoadingButton","py","px","variant","InfoTirageMoreMenu","_PATH_DASHBOARD$tirag","block","infoTirageId","ref","useRef","user","useAuth","isOpen","setIsOpen","useState","enqueueSnackbar","useSnackbar","dispatch","useDispatch","_Fragment","IconButton","moreVerticalFill","Menu","open","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","handlePermission","perms","MenuItem","window","confirm","async","values","Request","handleDeleteInfoTirage","getInfoTirages","handleDelete","ListItemIcon","trash2Outline","ListItemText","primary","primaryTypographyProps","PERMISSIONS","BLOCK_TIRAGE","handleModifyInfoTirage","unlockFill","lockFill","RouterLink","to","PATH_DASHBOARD","tirage","info_tirage","editFill","TABLE_HEAD","descendingComparator","a","b","InfoTirage","_PATH_DASHBOARD$tirag2","themeStretch","useSettings","useTheme","infotirages","useSelector","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","useEffect","emptyRows","Math","max","length","filteredInfoTirages","array","comparator","query","stabilizedThis","el","index","sort","filter","_infoTirage","name","toLowerCase","indexOf","applySortFilter","getComparator","isInfoTirageNotFound","Page","Container","HeaderBreadcrumbs","heading","links","href","root","action","Button","add_info_tirage","startIcon","plusFill","Card","InfoTirageListToolbar","target","Scrollbar","TableContainer","minWidth","Table","role","handleRequestSort","checked","newSelecteds","n","TableBody","slice","ite","isItemSelected","hover","tabIndex","scope","Stack","alignItems","Avatar","alt","companyName","src","company_photo","Typography","noWrap","start_time","end_time","Label","mode","status","style","colSpan","SearchNotFound","searchQuery","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/78.8fb82646.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nInfoTirageListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function InfoTirageListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Toolbar, Tooltip, IconButton, Typography, OutlinedInput, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nTypeTirageListToolbar.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n  loading: PropTypes.bool,\n  handlerefresh: PropTypes.func\n};\n\nexport default function TypeTirageListToolbar({ loading, handlerefresh, filterName, onFilterName }) {\n  return (\n    <RootStyle>\n      <SearchStyle\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Rechercher tirage?...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        }\n      />\n\n      <Tooltip title=\"Filter list\">\n        <LoadingButton sx={{ py: 2, px: 3 }} loading={loading} variant=\"contained\" onClick={handlerefresh}>\n          Rafraîchir\n        </LoadingButton>\n      </Tooltip>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport unlockFill from '@iconify/icons-eva/unlock-fill';\nimport lockFill from '@iconify/icons-eva/lock-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport { useSnackbar } from 'notistack';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport Request from '../../../../utils/Request';\nimport { useDispatch, useSelector } from '../../../../redux/store';\nimport { getInfoTirages } from '../../../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\nimport { PERMISSIONS } from '../../../../guards/Permissions';\nimport useAuth from '../../../../hooks/useAuth';\nimport { handlePermission } from '../../../../utils/handlePermission';\n\n// ----------------------------------------------------------------------\n\nInfoTirageMoreMenu.propTypes = {\n  infoTirageId: PropTypes.number,\n  block: PropTypes.bool\n};\n\nexport default function InfoTirageMoreMenu({ block, infoTirageId }) {\n  const ref = useRef(null);\n  const { user } = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const handleBlock = async () => {\n    setIsOpen(false);\n    const values = {\n      infoTirageId,\n      block\n    };\n    await Request.handleModifyInfoTirage(values);\n    dispatch(getInfoTirages());\n    enqueueSnackbar(!block ? 'Block with success' : 'unblock with success', { variant: 'success' });\n  };\n\n  const handleDelete = async () => {\n    setIsOpen(false);\n    const values = {\n      infoTirageId\n    };\n    await Request.handleDeleteInfoTirage(values);\n    dispatch(getInfoTirages());\n    enqueueSnackbar('delete with success', { variant: 'success' });\n  };\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        {handlePermission(user?.perms, 'delete_infotirage') && (\n          <MenuItem\n            onClick={() => {\n              const confirmation = window.confirm('Êtes-vous sûr de bien vouloir supprimer?');\n\n              if (confirmation) {\n                // Perform the deletion logic here\n                // You can call your API or update state as needed.\n                handleDelete();\n              }\n            }}\n            sx={{ color: 'red' }}\n          >\n            <ListItemIcon>\n              <Icon icon={trash2Outline} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        )}\n        {handlePermission(user?.perms, PERMISSIONS.BLOCK_TIRAGE) && (\n          <MenuItem onClick={handleBlock} sx={{ color: 'text.secondary' }}>\n            <ListItemIcon>\n              <Icon icon={!block ? lockFill : unlockFill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary={!block ? 'Desactiver' : 'Activer'} primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        )}\n        {handlePermission(user?.perms, 'change_infotirage') && (\n          <MenuItem\n            component={RouterLink}\n            to={`${PATH_DASHBOARD.tirage?.info_tirage}/${infoTirageId}/edit`}\n            sx={{ color: 'text.secondary' }}\n          >\n            <ListItemIcon>\n              <Icon icon={editFill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getInfoTirages } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport {\n  InfoTirageListHead,\n  InfoTirageListToolbar,\n  InfoTirageMoreMenu\n} from '../../components/_dashboard/infoTirage/list';\nimport useAuth from '../../hooks/useAuth';\nimport { handlePermission } from '../../utils/handlePermission';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Nom', alignRight: false },\n  { id: 'start_time', label: 'Ouverture', alignRight: false },\n  { id: 'end_time', label: 'Fermeture', alignRight: false },\n  { id: 'block', label: 'Block', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array?.map((el, index) => [el, index]);\n  stabilizedThis?.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_infoTirage) => _infoTirage?.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis?.map((el) => el[0]);\n}\n\nexport default function InfoTirage() {\n  const { user } = useAuth();\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { infotirages } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('first_name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handlerefresh = () => {\n    dispatch(getInfoTirages());\n  };\n\n  useEffect(() => {\n    handlerefresh();\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = infotirages?.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteInfoTirage = (infotirageId) => {\n    // dispatch(deleteInfoTirage(infotirageId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - infotirages.length) : 0;\n\n  const filteredInfoTirages = applySortFilter(infotirages, getComparator(order, orderBy), filterName);\n\n  const isInfoTirageNotFound = filteredInfoTirages?.length === 0;\n\n  return (\n    <Page title=\"Tirage: List | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Liste des tirages\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Tirages', href: PATH_DASHBOARD.tirage?.info_tirage },\n            { name: 'Listes' }\n          ]}\n          action={\n            handlePermission(user?.perms, 'add_infotirage') && (\n              <Button\n                variant=\"contained\"\n                component={RouterLink}\n                to={PATH_DASHBOARD.tirage?.add_info_tirage}\n                startIcon={<Icon icon={plusFill} />}\n              >\n                Ajouter Tirage\n              </Button>\n            )\n          }\n        />\n\n        <Card>\n          <InfoTirageListToolbar\n            numSelected={selected.length}\n            filterName={filterName}\n            onFilterName={handleFilterByName}\n            handlerefresh={handlerefresh}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <InfoTirageListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={[\n                    ...(user?.role === 'superuser' ? [{ id: 'company', label: 'Compagnie', alignRight: false }] : []),\n                    ...TABLE_HEAD\n                  ]}\n                  rowCount={infotirages?.length}\n                  numSelected={selected?.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {(rowsPerPage > 0\n                    ? filteredInfoTirages?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : filteredInfoTirages\n                  )?.map((ite) => {\n                    const isItemSelected = selected.indexOf(ite?.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={ite?.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        {user?.role === 'superuser' && (\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                              <Avatar alt={ite?.companyName} src={ite?.company_photo} />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                {ite?.companyName}\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n                        )}\n                        <TableCell align=\"left\">{ite?.name}</TableCell>\n                        <TableCell align=\"left\">{ite?.start_time}</TableCell>\n                        <TableCell align=\"left\">{ite?.end_time}</TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={(ite?.block && 'error') || 'success'}\n                          >\n                            {ite?.block ? 'Desactiver' : 'Activer'}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={(!ite?.status && 'error') || 'success'}\n                          >\n                            {ite?.status ? 'En cours' : 'Fermé'}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          <InfoTirageMoreMenu block={ite?.block} infoTirageId={ite?.id} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isInfoTirageNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            labelRowsPerPage=\"Lignes par page\"\n            rowsPerPageOptions={[25, 50, 75, 100, { label: 'Tout', value: -1 }]}\n            component=\"div\"\n            count={infotirages?.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}