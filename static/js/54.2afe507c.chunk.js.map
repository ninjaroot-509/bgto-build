{"version":3,"sources":["components/HeaderBreadcrumbs.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","components/_dashboard/tirage/TirageNewForm.js","pages/dashboard/TirageCreate.js"],"names":["HeaderBreadcrumbs","_ref","links","action","heading","moreLink","sx","other","_jsxs","Box","mb","children","display","alignItems","flexGrow","_jsx","Typography","variant","gutterBottom","MBreadcrumbs","flexShrink","mt","isString","Link","href","target","map","noWrap","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","TIRAGE","id","InfoTirageNewForm","_ref3","_infotirages$find","isEdit","currentTirage","user","useAuth","navigate","useNavigate","dispatch","useDispatch","enqueueSnackbar","useSnackbar","infotirages","useSelector","state","NewInfoTirageSchema","Yup","shape","pick2","nullable","length","tirage_1","required","tirage_2","tirage_3","info_tirage_id","date","formik","useFormik","enableReinitialize","initialValues","info_tirage","fDateOnly","Date","tirageId","validationSchema","onSubmit","async","values","_ref2","setSubmitting","resetForm","setErrors","body","_PATH_DASHBOARD$tirag","Request","handleModifyTirage","handleAddTirage","getTirages","PATH_DASHBOARD","tirage","list","error","message","alert","JSON","stringify","useEffect","getInfoTirages","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","FormikProvider","value","Form","noValidate","autoComplete","Grid","container","spacing","item","xs","md","p","Stack","direction","sm","TextField","select","fullWidth","label","placeholder","SelectProps","native","Boolean","role","option","includes","find","inft","Number","tirage_id","DatePicker","disabled","inputFormat","onChange","renderInput","params","justifyContent","LoadingButton","type","loading","TirageCreate","themeStretch","useSettings","pathname","useLocation","useParams","tirages","trg","Page","title","Container","maxWidth","TirageNewForm"],"mappings":"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","file":"static/js/54.2afe507c.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { Box, Card, Grid, Stack, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport Request from '../../../utils/Request';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getTirages, getInfoTirages } from '../../../redux/slices/user';\nimport { fDateOnly } from '../../../utils/formatTime';\nimport useAuth from '../../../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nInfoTirageNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentTirage: PropTypes.object\n};\n\nconst TIRAGE = [\n  { id: 'NYM', name: 'New York Midi' },\n  { id: 'NYS', name: 'New York Soir' },\n  { id: 'FLM', name: 'Florida Midi' },\n  { id: 'FLS', name: 'Florida Soir' },\n  { id: 'GGMT', name: 'Georgia Matin' },\n  { id: 'GGMD', name: 'Georgia Soir' },\n  { id: 'GGS', name: 'Georgia Nuit' },\n  { id: 'TXMA', name: 'Texas Matin' },\n  { id: 'TXM', name: 'Texas Midi' },\n  { id: 'TXS', name: 'Texas Soir' },\n  { id: 'CGM', name: 'Chicago Midi' },\n  { id: 'CGS', name: 'Chicago Soir' },\n  { id: 'LCM', name: 'Lave chodyè Matin' },\n  { id: 'LCS', name: 'Lave chodyè Soir' },\n  { id: 'TNM', name: 'Tennessee Matin' },\n  { id: 'TNMD', name: 'Tennessee Midi' },\n  { id: 'TNS', name: 'Tennessee Soir' },\n  { id: 'NJM', name: 'New Jersey Matin' },\n  { id: 'NJMM', name: 'New Jersey Midi' },\n  { id: 'NJS', name: 'New Jersey Soir' },\n  { id: 'ANA', name: 'Anguilla AM (10H)' },\n  { id: 'ANM', name: 'Anguilla Midi' },\n  { id: 'ANS', name: 'Anguilla Soir' },\n  { id: 'ANN', name: 'Anguilla Nuit' },\n  { id: 'RL', name: 'Real' },\n  { id: 'PRM', name: 'Primera Midi' },\n  { id: 'PRS', name: 'Primera Soir' },\n  { id: 'SUA', name: 'Suerte AM' },\n  { id: 'SUS', name: 'Suerte Soir' },\n  { id: 'LK', name: 'Loteka' },\n  { id: 'KL', name: 'King Lottery Noche' },\n  { id: 'NA', name: 'Nacional Midi' },\n  { id: 'NAS', name: 'Nacional Soir' },\n  { id: 'QPL', name: 'Quiniela palé' }\n];\n\nexport default function InfoTirageNewForm({ isEdit, currentTirage }) {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { infotirages } = useSelector((state) => state.user);\n\n  const NewInfoTirageSchema = Yup.object().shape({\n    pick2: Yup.string().nullable().length(2),\n    tirage_1: Yup.string().required('tirage_1 is required').length(3),\n    tirage_2: Yup.string().required('tirage_2 is required').length(2),\n    tirage_3: Yup.string().required('tirage_3 is required').length(2),\n    info_tirage_id: Yup.string().required('type tirage is required'),\n    date: Yup.date().required('date is required').nullable()\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      pick2: currentTirage?.pick2 || null,\n      tirage_1: currentTirage?.tirage_1 || null,\n      tirage_2: currentTirage?.tirage_2 || null,\n      tirage_3: currentTirage?.tirage_3 || null,\n      info_tirage_id: currentTirage?.info_tirage || null,\n      date: fDateOnly(currentTirage?.date || new Date()),\n      tirageId: currentTirage?.id\n    },\n    validationSchema: NewInfoTirageSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      const body = {\n        ...values,\n        date: fDateOnly(values?.date)\n      };\n      try {\n        if (isEdit) {\n          await Request.handleModifyTirage(body);\n        } else {\n          await Request.handleAddTirage(body);\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Créer avec succès' : 'Mettre à jour avec succès', { variant: 'success' });\n        getTirages();\n        navigate(PATH_DASHBOARD.tirage?.list);\n      } catch (error) {\n        if (error?.message) {\n          enqueueSnackbar(error?.message, { variant: 'error' });\n        } else {\n          alert(JSON.stringify(error));\n        }\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  useEffect(() => {\n    dispatch(getTirages());\n    dispatch(getInfoTirages());\n  }, [dispatch]);\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Tirage\"\n                    placeholder=\"Choisir un tirage\"\n                    {...getFieldProps('info_tirage_id')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.info_tirage_id && errors.info_tirage_id)}\n                    // helperText={touched.info_tirage_id && errors.info_tirage_id}\n                  >\n                    <option value=\"\" />\n                    {(user?.role !== 'superuser' ? infotirages : TIRAGE)?.map((option) => (\n                      <option key={option.id} value={option.id}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </TextField>\n                  {['FLM', 'FLS'].includes(\n                    user?.role !== 'superuser'\n                      ? infotirages?.find((inft) => inft?.id === Number(values.info_tirage_id))?.tirage_id\n                      : values.info_tirage_id\n                  ) && (\n                    <TextField\n                      fullWidth\n                      label=\"Pick 2\"\n                      placeholder=\"Pick 2\"\n                      {...getFieldProps('pick2')}\n                      error={Boolean(touched.pick2 && errors.pick2)}\n                      // helperText={touched.pick2 && errors.pick2}\n                    />\n                  )}\n                  <TextField\n                    fullWidth\n                    label=\"Lotto3 et 1er Lot\"\n                    placeholder=\"Lotto3 et 1er Lot\"\n                    {...getFieldProps('tirage_1')}\n                    error={Boolean(touched.tirage_1 && errors.tirage_1)}\n                    // helperText={touched.tirage_1 && errors.tirage_1}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"2 ème Lot\"\n                    placeholder=\"2 ème Lot\"\n                    {...getFieldProps('tirage_2')}\n                    error={Boolean(touched.tirage_2 && errors.tirage_2)}\n                    // helperText={touched.tirage_2 && errors.tirage_2}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"3 ème Lot\"\n                    placeholder=\"3 ème Lot\"\n                    {...getFieldProps('tirage_3')}\n                    error={Boolean(touched.tirage_3 && errors.tirage_3)}\n                    // helperText={touched.tirage_3 && errors.tirage_3}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <DatePicker\n                    disabled={isEdit}\n                    label=\"Date du tirage\"\n                    placeholder=\"Entrer la date du tirage\"\n                    inputFormat=\"MM-dd-yyyy\"\n                    {...getFieldProps('date')}\n                    onChange={(date) => setFieldValue('date', date)}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} error={Boolean(touched.date && errors.date)} />\n                    )}\n                  />\n                </Stack>\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Ajouter Tirage' : 'Sauvegarder les modifications'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getTirages } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport TirageNewForm from '../../components/_dashboard/tirage/TirageNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function TirageCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { tirageId } = useParams();\n  const { tirages } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentTirage = tirages.find((trg) => trg?.id === Number(tirageId));\n\n  return (\n    <Page title=\"Lot gagnants: Ajouter lot gagnants | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Ajouter lot gagnants' : 'Modifier lot gagnants'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Lot gagnants', href: PATH_DASHBOARD.tirage?.root },\n            { name: !isEdit ? 'Ajouter lot gagnants' : 'Modification' }\n          ]}\n        />\n\n        <TirageNewForm isEdit={isEdit} currentTirage={currentTirage} />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}