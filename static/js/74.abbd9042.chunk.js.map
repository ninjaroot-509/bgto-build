{"version":3,"sources":["components/_dashboard/message/list/MessageListHead.js","components/_dashboard/message/list/MessageListToolbar.js","components/_dashboard/message/list/MessageMoreMenu.js","pages/dashboard/AppPromote.js"],"names":["AgentListHead","_ref","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","_jsx","TableHead","children","TableRow","map","headCell","TableCell","align","alignRight","sortDirection","id","_jsxs","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","RootStyle","styled","Toolbar","theme","height","display","justifyContent","padding","spacing","SearchStyle","OutlinedInput","_ref2","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","concat","palette","grey","CompagniesListToolbar","_ref3","loading","handleGo","filterName","onFilterName","value","onChange","placeholder","startAdornment","InputAdornment","position","component","Icon","icon","searchFill","color","Tooltip","title","LoadingButton","py","px","variant","MessageMoreMenu","_PATH_DASHBOARD$user","block","messageId","ref","useRef","user","useAuth","isOpen","setIsOpen","useState","enqueueSnackbar","useSnackbar","dispatch","useDispatch","_Fragment","IconButton","moreVerticalFill","Menu","open","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","handlePermission","perms","MenuItem","window","confirm","async","values","Request","handleDeleteMessage","getMessages","handleDelete","ListItemIcon","trash2Outline","ListItemText","primary","primaryTypographyProps","RouterLink","to","PATH_DASHBOARD","promote","editFill","TABLE_HEAD","descendingComparator","a","b","AppPromote","themeStretch","useSettings","useTheme","useSelector","state","page","setPage","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","setLoading","useEffect","emptyRows","Math","max","length","filteredMessage","array","comparator","query","stabilizedThis","el","index","sort","filter","_supervisor","first_name","toLowerCase","indexOf","applySortFilter","getComparator","isMessageNotFound","Page","Container","HeaderBreadcrumbs","heading","links","name","href","root","action","Button","newPromote","startIcon","plusFill","Card","MessageListToolbar","target","Scrollbar","TableContainer","minWidth","Table","MessageListHead","handleRequestSort","checked","newSelecteds","n","TableBody","slice","ite","isItemSelected","hover","tabIndex","role","scope","Stack","alignItems","Avatar","alt","companyName","src","company_photo","Typography","noWrap","who_name","text","created_on","style","colSpan","SearchNotFound","searchQuery","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/74.abbd9042.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nAgentListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function AgentListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Toolbar, Tooltip, IconButton, Typography, OutlinedInput, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nCompagniesListToolbar.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n  loading: PropTypes.bool,\n  handleGo: PropTypes.func\n};\n\nexport default function CompagniesListToolbar({ loading, handleGo, filterName, onFilterName }) {\n  return (\n    <RootStyle>\n      <SearchStyle\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Rechercher compagnie?...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n          </InputAdornment>\n        }\n      />\n\n      <Tooltip title=\"Filter list\">\n        <LoadingButton sx={{ py: 2, px: 3 }} loading={loading} variant=\"contained\" onClick={handleGo}>\n          Rafraîchir\n        </LoadingButton>\n      </Tooltip>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport unlockFill from '@iconify/icons-eva/unlock-fill';\nimport lockFill from '@iconify/icons-eva/lock-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport { useSnackbar } from 'notistack';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport Request from '../../../../utils/Request';\nimport { useDispatch, useSelector } from '../../../../redux/store';\nimport { getMessages } from '../../../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\nimport { PERMISSIONS } from '../../../../guards/Permissions';\nimport useAuth from '../../../../hooks/useAuth';\nimport { handlePermission } from '../../../../utils/handlePermission';\n\n// ----------------------------------------------------------------------\n\nMessageMoreMenu.propTypes = {\n  messageId: PropTypes.number,\n  block: PropTypes.bool\n};\n\nexport default function MessageMoreMenu({ block, messageId }) {\n  const ref = useRef(null);\n  const { user } = useAuth();\n  const [isOpen, setIsOpen] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    setIsOpen(false);\n    const values = {\n      messageId\n    };\n    await Request.handleDeleteMessage(values);\n    dispatch(getMessages());\n    enqueueSnackbar('delete with success', { variant: 'success' });\n  };\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        {handlePermission(user?.perms, 'delete_apppromote') && (\n          <MenuItem\n            onClick={() => {\n              const confirmation = window.confirm('Êtes-vous sûr de bien vouloir supprimer?');\n\n              if (confirmation) {\n                // Perform the deletion logic here\n                // You can call your API or update state as needed.\n                handleDelete();\n              }\n            }}\n            sx={{ color: 'red' }}\n          >\n            <ListItemIcon>\n              <Icon icon={trash2Outline} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        )}\n        {handlePermission(user?.perms, 'change_apppromote') && (\n          <MenuItem\n            component={RouterLink}\n            to={`${PATH_DASHBOARD.user?.promote}/${messageId}/edit`}\n            sx={{ color: 'text.secondary' }}\n          >\n            <ListItemIcon>\n              <Icon icon={editFill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n          </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getMessages } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { MessageListHead, MessageListToolbar, MessageMoreMenu } from '../../components/_dashboard/message/list';\nimport useAuth from '../../hooks/useAuth';\nimport { handlePermission } from '../../utils/handlePermission';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Compagnie', alignRight: false },\n  { id: 'pour', label: 'Pour ?', alignRight: false },\n  { id: 'text', label: 'message', alignRight: false },\n  { id: 'created_on', label: 'created_on', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array?.map((el, index) => [el, index]);\n  stabilizedThis?.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_supervisor) => _supervisor?.first_name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis?.map((el) => el[0]);\n}\n\nexport default function AppPromote() {\n  const { user } = useAuth();\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { promote } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('first_name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [loading, setLoading] = useState(false);\n\n  const handleGo = async () => {\n    setLoading(true);\n    await dispatch(getMessages());\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGo();\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = promote?.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteSupervisor = (supervisorId) => {\n    // dispatch(deleteSupervisor(supervisorId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - promote.length) : 0;\n\n  const filteredMessage = applySortFilter(promote, getComparator(order, orderBy), filterName);\n\n  const isMessageNotFound = filteredMessage?.length === 0;\n\n  return (\n    <Page title=\"Message: List | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Liste des Messages push\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Messages', href: PATH_DASHBOARD.user.promote },\n            { name: 'Listes' }\n          ]}\n          action={\n            handlePermission(user?.perms, 'add_apppromote') && (\n              <Button\n                variant=\"contained\"\n                component={RouterLink}\n                to={PATH_DASHBOARD.user.newPromote}\n                startIcon={<Icon icon={plusFill} />}\n              >\n                Ajouter Message\n              </Button>\n            )\n          }\n        />\n\n        <Card>\n          <MessageListToolbar\n            handleGo={handleGo}\n            loading={loading}\n            filterName={filterName}\n            onFilterName={handleFilterByName}\n          />\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <MessageListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={promote?.length}\n                  numSelected={selected?.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {(rowsPerPage > 0\n                    ? filteredMessage?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : filteredMessage\n                  )?.map((ite) => {\n                    const isItemSelected = selected.indexOf(ite?.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={ite?.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={ite?.companyName} src={ite?.company_photo} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {ite?.companyName}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{ite?.who_name}</TableCell>\n                        <TableCell align=\"left\">{ite?.text}</TableCell>\n                        <TableCell align=\"left\">{ite?.created_on}</TableCell>\n\n                        <TableCell align=\"right\">\n                          <MessageMoreMenu block={ite?.block} messageId={ite?.id} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isMessageNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            labelRowsPerPage=\"Lignes par page\"\n            rowsPerPageOptions={[25, 50, 75, 100, { label: 'Tout', value: -1 }]}\n            component=\"div\"\n            count={promote?.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}