{"version":3,"sources":["utils/formatNumber.js","components/_dashboard/general-app/AppLotto.js","components/_dashboard/general-app/AppGain.js","components/_dashboard/general-app/AppGPC.js","components/_dashboard/general-app/AppTirage.js","components/_dashboard/general-app/AppTotalFichesMontant.js","components/_dashboard/general-app/AppTotalPerte.js","components/_dashboard/general-app/AppTotalGain.js","components/_dashboard/general-app/AppTotalAgentActif.js","components/_dashboard/general-app/AppAreaFiches.js","components/_dashboard/general-app/Tirage.js","components/_dashboard/general-app/AppTotalCommission.js","components/_dashboard/general-app/LotGagnant.js","components/_dashboard/general-app/AgentsRap.js","components/_dashboard/general-app/SupRap.js","components/_dashboard/general-app/TotalRap.js","components/_dashboard/general-app/AppTotalAnother.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fData","ChartDonut","dispatch","useDispatch","appLotto","useSelector","state","user","load","setLoad","useState","chartOptions","merge","BaseOptionChart","labels","allLotto","stroke","show","legend","horizontalAlign","plotOptions","pie","donut","size","_jsxs","Card","children","_jsx","CardHeader","title","subheader","action","LoadingButton","onClick","async","getAppLotto","loading","variant","startIcon","Icon","icon","refreshFill","ReactApexChart","type","series","allLottoBoule","options","width","ChartColumnNegative","theme","useTheme","useAuth","appGain","CHART_DATA","name","data","gain","yaxis","formatter","y","concat","toFixed","currency_code","xaxis","categories","date","bar","columnWidth","colors","ranges","from","to","color","palette","chart","yellow","red","getAppGain","height","ChartColumnMultiple","appGpc","montant","perte","violet","primary","main","month","tooltip","val","getAppGpc","ChartBar","appTirage","allTirageMontant","horizontal","barHeight","allTirage","getAppTirage","AppTotalFichesMontant","_ref","ficheMontant","ficheCount","sx","display","alignItems","p","backgroundColor","Box","flexGrow","Typography","AppTotalPerte","fichePerteMontant","fontSize","AppTotalGain","ficheGainMontant","AppTotalAgentActifs","agentActifCount","agentInactifCount","AppAreaInstalled","appFiche","getAppFiche","moment","locale","RootStyle","styled","boxShadow","customShadows","z8","textAlign","justifyContent","Tirage","_ref2","id","list","sortedList","sort","a","b","timeOfDayOrder","timeOfDayA","timeOfDayB","indexOf","alt","src","style","paddingLeft","paddingRight","map","item","_Fragment","py","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","Stack","flexDirection","padding","borderRadius","px","tirage_1","tirage_2","tirage_3","AppTotalCommission","commission","AppLotGagnant","lotgagnants","useEffect","getLotGagnants","light","mb","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","row","tirage_name","tfiches","tfichesgagnants","ref_code","role","companyName","agent_name","quantite","fgagnant","montant_total","gain_s_percent_agent","gain_a_percent_agent","Divider","supervisor_name","rapport","commissionA","commissionS","gain_s_percent_supervisor","gain_a_percent_supervisor","AppTotalAnother","text","value","bgColor"],"mappings":"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","file":"static/js/10.8ad66638.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0,0' : '0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { merge } from 'lodash';\nimport { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader } from '@mui/material';\nimport { Icon } from '@iconify/react';\nimport refreshFill from '@iconify/icons-eva/refresh-fill';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { BaseOptionChart } from '../../charts';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getAppLotto } from '../../../redux/slices/user';\n\n// ----------------------------------------------------------------------\n\nexport default function ChartDonut() {\n  const dispatch = useDispatch();\n  const { appLotto } = useSelector((state) => state.user);\n\n  const [load, setLoad] = useState(false);\n\n  const handleLoad = async () => {\n    setLoad(true);\n    await dispatch(getAppLotto());\n    setLoad(false);\n  };\n\n  const chartOptions = merge(BaseOptionChart(), {\n    labels: appLotto?.allLotto,\n    stroke: { show: false },\n    legend: { horizontalAlign: 'center' },\n    plotOptions: { pie: { donut: { size: '90%' } } }\n  });\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Options historiques\"\n        subheader=\"toutes les montants\"\n        action={\n          <LoadingButton\n            onClick={handleLoad}\n            loading={load}\n            variant=\"contained\"\n            startIcon={<Icon icon={refreshFill} />}\n          >\n            Refresh\n          </LoadingButton>\n        }\n      />\n      {appLotto && <ReactApexChart type=\"donut\" series={appLotto?.allLottoBoule} options={chartOptions} width={400} />}\n    </Card>\n  );\n}\n","import { merge } from 'lodash';\nimport { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Icon } from '@iconify/react';\nimport refreshFill from '@iconify/icons-eva/refresh-fill';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { BaseOptionChart } from '../../charts';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getAppGain } from '../../../redux/slices/user';\nimport useAuth from '../../../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nexport default function ChartColumnNegative() {\n  const theme = useTheme();\n  const { user } = useAuth();\n  const { appGain } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n\n  const handleLoad = async () => {\n    setLoad(true);\n    await dispatch(getAppGain());\n    setLoad(false);\n  };\n\n  const CHART_DATA = [\n    {\n      name: 'Balance',\n      data: appGain?.gain\n    }\n  ];\n\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { show: false },\n    yaxis: {\n      labels: {\n        formatter: (y) => `${y.toFixed(0)} ${user.currency_code}`\n      }\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: appGain?.date\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '58%',\n        colors: {\n          ranges: [\n            { from: 100000, to: 1000000000, color: theme.palette.chart.yellow[0] },\n            { from: -1000000000, to: 0, color: theme.palette.chart.red[0] }\n          ]\n        }\n      }\n    }\n  });\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Historiques de vos gains\"\n        subheader=\"toutes vos gains de ce mois\"\n        action={\n          <LoadingButton\n            onClick={handleLoad}\n            loading={load}\n            variant=\"contained\"\n            startIcon={<Icon icon={refreshFill} />}\n          >\n            Refresh\n          </LoadingButton>\n        }\n      />\n      {appGain && <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} height={320} />}\n    </Card>\n  );\n}\n","import { merge } from 'lodash';\nimport { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader } from '@mui/material';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport { Icon } from '@iconify/react';\nimport refreshFill from '@iconify/icons-eva/refresh-fill';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { BaseOptionChart } from '../../charts';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getAppGpc } from '../../../redux/slices/user';\nimport useAuth from '../../../hooks/useAuth';\n\n// ----------------------------------------------------------------------\n\nexport default function ChartColumnMultiple() {\n  const theme = useTheme();\n  const { user } = useAuth();\n  const { appGpc } = useSelector((state) => state.user);\n  const CHART_DATA = [\n    { name: 'Montant', data: appGpc?.montant },\n    { name: 'Balance', data: appGpc?.gain },\n    { name: 'Perte', data: appGpc?.perte }\n  ];\n  const dispatch = useDispatch();\n\n  const [load, setLoad] = useState(false);\n\n  const handleLoad = async () => {\n    setLoad(true);\n    await dispatch(getAppGpc());\n    setLoad(false);\n  };\n\n  const chartOptions = merge(BaseOptionChart(), {\n    stroke: { show: true, width: 2, colors: ['transparent'] },\n    colors: [theme.palette.chart.violet[0], theme.palette.primary.main, theme.palette.chart.red[0]],\n    xaxis: {\n      categories: appGpc?.month\n    },\n    tooltip: {\n      y: {\n        formatter(val) {\n          return `${fNumber(val)} ${user.currency_code}`;\n        }\n      }\n    },\n    plotOptions: {\n      bar: { columnWidth: '58%' }\n    }\n  });\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Rapports de chaque mois\"\n        subheader=\"toutes vos montants, gains et pertes de l'annee\"\n        action={\n          <LoadingButton\n            onClick={handleLoad}\n            loading={load}\n            variant=\"contained\"\n            startIcon={<Icon icon={refreshFill} />}\n          >\n            Refresh\n          </LoadingButton>\n        }\n      />\n      {appGpc && <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} height={320} />}\n    </Card>\n  );\n}\n","import { merge } from 'lodash';\nimport { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader } from '@mui/material';\nimport { Icon } from '@iconify/react';\nimport refreshFill from '@iconify/icons-eva/refresh-fill';\nimport { LoadingButton } from '@mui/lab';\n//\nimport { BaseOptionChart } from '../../charts';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getAppTirage } from '../../../redux/slices/user';\nimport useAuth from '../../../hooks/useAuth';\n\n// ----------------------------------------------------------------------\n\nexport default function ChartBar() {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { appTirage } = useSelector((state) => state.user);\n  const CHART_DATA = [{ name: 'Montant', data: appTirage?.allTirageMontant }];\n\n  const [load, setLoad] = useState(false);\n\n  const handleLoad = async () => {\n    setLoad(true);\n    await dispatch(getAppTirage());\n    setLoad(false);\n  };\n\n  const chartOptions = merge(BaseOptionChart(), {\n    colors: ['#00a0ea'],\n    stroke: { show: false },\n    plotOptions: {\n      bar: { horizontal: true, barHeight: '30%' }\n    },\n    tooltip: {\n      y: {\n        formatter(val) {\n          return `${fNumber(val)} ${user.currency_code}`;\n        }\n      }\n    },\n    xaxis: {\n      categories: appTirage?.allTirage\n    }\n  });\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Tirages historiques\"\n        subheader=\"montant de fiches par tirages\"\n        action={\n          <LoadingButton\n            onClick={handleLoad}\n            loading={load}\n            variant=\"contained\"\n            startIcon={<Icon icon={refreshFill} />}\n          >\n            Refresh\n          </LoadingButton>\n        }\n      />\n      {appTirage && <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} height={365} />}\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nexport default function AppTotalFichesMontant({ ficheMontant, ficheCount }) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: 'red', color: 'white' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Total Ventes ( {ficheCount} )</Typography>\n        <Typography variant=\"h4\">{fNumber(ficheMontant)}</Typography>\n      </Box>\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nexport default function AppTotalPerte({ fichePerteMontant }) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: '#6C00FF', color: 'white' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\" sx={{ fontSize: 11 }}>\n          Montant a payer\n        </Typography>\n        <Typography variant=\"h4\">{fNumber(fichePerteMontant)}</Typography>\n      </Box>\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nexport default function AppTotalGain({ ficheGainMontant }) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: '#2192FF', color: 'white' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\" sx={{ fontSize: 11 }}>\n          Total Balance\n        </Typography>\n        <Typography sx={{ color: ficheGainMontant > 0 ? 'white' : 'red' }} variant=\"h4\">\n          {fNumber(ficheGainMontant)}\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nexport default function AppTotalAgentActifs({ agentActifCount, agentInactifCount }) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: '#10A19D', color: 'white' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\" sx={{ fontSize: 11 }}>\n          Agent Actifs | Inactifs\n        </Typography>\n        <Typography variant=\"h4\">\n          {fNumber(agentActifCount)} | {fNumber(agentInactifCount)}\n        </Typography>\n      </Box>\n    </Card>\n  );\n}\n","import { merge } from 'lodash';\nimport { useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n// material\nimport { Card, CardHeader } from '@mui/material';\n//\nimport { Icon } from '@iconify/react';\nimport refreshFill from '@iconify/icons-eva/refresh-fill';\nimport { LoadingButton } from '@mui/lab';\nimport { BaseOptionChart } from '../../charts';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getAppFiche } from '../../../redux/slices/user';\n\n// ----------------------------------------------------------------------\n\nexport default function AppAreaInstalled() {\n  const dispatch = useDispatch();\n  const { appFiche } = useSelector((state) => state.user);\n  const [load, setLoad] = useState(false);\n\n  const handleLoad = async () => {\n    setLoad(true);\n    await dispatch(getAppFiche());\n    setLoad(false);\n  };\n\n  const chartOptions = merge(BaseOptionChart(), {\n    xaxis: {\n      categories: appFiche?.month\n    }\n  });\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Fiches historiques\"\n        subheader=\"nombres de fiches par date\"\n        action={\n          <LoadingButton\n            onClick={handleLoad}\n            loading={load}\n            variant=\"contained\"\n            startIcon={<Icon icon={refreshFill} />}\n          >\n            Refresh\n          </LoadingButton>\n        }\n      />\n      {appFiche && <ReactApexChart type=\"line\" series={appFiche?.data} options={chartOptions} height={320} />}\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Typography, Button, Card, Box, Stack } from '@mui/material';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nmoment.locale('fr');\n/* eslint import/newline-after-import: \"off\" */\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: 'white',\n  height: '100%',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n}));\n\n// ----------------------------------------------------------------------\n\nTirage.propTypes = {\n  id: PropTypes.number,\n  list: PropTypes.array\n};\n\nexport default function Tirage({ id, list }) {\n  const sortedList = [...list];\n\n  sortedList.sort((a, b) => {\n    // Define the order of times of day\n    const timeOfDayOrder = ['Soir', 'Midi', 'Matin'];\n\n    // Get the time of day for both items\n    const timeOfDayA = a.name;\n    const timeOfDayB = b.name;\n\n    // Compare the positions of the time of day in the order\n    return timeOfDayOrder.indexOf(timeOfDayA) - timeOfDayOrder.indexOf(timeOfDayB);\n  });\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          width: 200,\n          display: 'flex',\n          alignItems: 'center'\n        }}\n      >\n        <img alt=\"LOGO\" src={`/static/icons/${id}.png`} style={{ paddingLeft: 18, paddingRight: 18 }} />\n      </Box>\n      <Box sx={{ p: 1 }}>\n        {sortedList?.map((item) => (\n          <>\n            <Typography variant=\"subtitle2\" sx={{ py: 1 }}>\n              {moment(item?.date).calendar(null, {\n                lastDay: '[Hier]',\n                sameDay: \"[Aujourd'hui]\",\n                nextDay: '[Demain]',\n                lastWeek: 'dddd',\n                nextWeek: 'dddd',\n                sameElse: 'L'\n              })}{' '}\n              {item.name}\n            </Typography>\n            <Stack\n              sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                textAlign: 'center',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Box\n                sx={{\n                  padding: 0.2,\n                  backgroundColor: '#143fff',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderRadius: 50\n                }}\n              >\n                <Typography variant=\"subtitle2\" sx={{ color: 'white', px: 0.5 }}>\n                  {item.tirage_1}\n                </Typography>\n              </Box>\n              <Box\n                sx={{\n                  padding: 0.2,\n                  backgroundColor: '#ff9612',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderRadius: 50\n                }}\n              >\n                <Typography variant=\"subtitle2\" sx={{ color: 'white', px: 0.5 }}>\n                  {item.tirage_2}\n                </Typography>\n              </Box>\n              <Box\n                sx={{\n                  padding: 0.2,\n                  backgroundColor: '#00a0ea',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  borderRadius: 50\n                }}\n              >\n                <Typography variant=\"subtitle2\" sx={{ color: 'white', px: 0.5 }}>\n                  {item.tirage_3}\n                </Typography>\n              </Box>\n            </Stack>\n          </>\n        ))}\n      </Box>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber } from '../../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nexport default function AppTotalCommission({ commission }) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: '#6F1AB6', color: 'white' }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Commissions</Typography>\n        <Typography variant=\"h4\">{fNumber(commission)}</Typography>\n      </Box>\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { format } from 'date-fns';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  Divider,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  CardHeader,\n  TableContainer,\n  Typography\n} from '@mui/material';\n// components\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getLotGagnants } from '../../../redux/slices/user';\nimport Scrollbar from '../../Scrollbar';\nimport { fNumber } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nexport default function AppLotGagnant() {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const { lotgagnants } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    dispatch(getLotGagnants());\n  }, [dispatch]);\n\n  return (\n    <Card sx={{ backgroundColor: theme.palette.primary.light, color: 'white' }}>\n      <CardHeader title=\"Lot Gagnant pour aujourd'hui\" sx={{ mb: 3 }} />\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">Tirage</TableCell>\n                <TableCell align=\"center\">Tirage 1</TableCell>\n                <TableCell align=\"center\">Tirage 2</TableCell>\n                <TableCell align=\"center\">Tirage 3</TableCell>\n                <TableCell align=\"center\">Total fiches</TableCell>\n                <TableCell align=\"center\">Fiche gagnant</TableCell>\n                <TableCell align=\"right\">Gain / Perte</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lotgagnants.map((row) => (\n                <TableRow key={row.ref_code}>\n                  <TableCell sx={{ color: 'white' }}>{row.tirage_name}</TableCell>\n                  <TableCell align=\"center\" sx={{ color: 'white' }}>\n                    {row.tirage_1}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ color: 'white' }}>\n                    {row.tirage_2}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ color: 'white' }}>\n                    {row.tirage_3}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ color: 'white' }}>\n                    {row.tfiches}\n                  </TableCell>\n                  <TableCell align=\"center\" sx={{ color: 'white' }}>\n                    {fNumber(row.tfichesgagnants)}\n                  </TableCell>\n                  <TableCell align=\"right\" sx={{ color: 'white' }}>\n                    {fNumber(row.gain)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      {/* <Divider />\n\n      <Box sx={{ p: 2, textAlign: 'right' }}>\n        <Button size=\"small\" color=\"inherit\" endIcon={<Icon icon={arrowIosForwardFill} />}>\n          Voir Plus\n        </Button>\n      </Box> */}\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { format } from 'date-fns';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  Divider,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  CardHeader,\n  TableContainer,\n  Typography\n} from '@mui/material';\n// components\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport Scrollbar from '../../Scrollbar';\nimport { fNumber } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nexport default function AppLotGagnant({ list, user }) {\n  const theme = useTheme();\n\n  return (\n    <Card sx={{ backgroundColor: theme.palette.primary.light, color: 'white' }}>\n      <CardHeader title=\"Agent\" sx={{ mb: 3 }} />\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {user?.role === 'superuser' && <TableCell align=\"left\">Compagnie</TableCell>}\n                <TableCell align=\"left\">Agent</TableCell>\n                <TableCell align=\"center\">Tfiches</TableCell>\n                <TableCell align=\"center\">Tfiches gagnant</TableCell>\n                <TableCell align=\"center\">Vente</TableCell>\n                <TableCell align=\"center\">A payé</TableCell>\n                <TableCell align=\"center\">%Agent</TableCell>\n                <TableCell align=\"center\">balance sans %agent</TableCell>\n                <TableCell align=\"right\">balance avec %agent</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list?.map((row) => (\n                <>\n                  <TableRow key={row.ref_code}>\n                    {user?.role === 'superuser' && <TableCell sx={{ color: 'white' }}>{row.companyName}</TableCell>}\n                    <TableCell sx={{ color: 'white' }}>{row.agent_name}</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {row.quantite}\n                    </TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {row.fgagnant}\n                    </TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {fNumber(row.montant_total)}\n                    </TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {fNumber(row.perte)}\n                    </TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {fNumber(row.commission)}\n                    </TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {fNumber(row.gain_s_percent_agent)}\n                    </TableCell>\n                    <TableCell align=\"right\" sx={{ color: 'white' }}>\n                      {fNumber(row.gain_a_percent_agent)}\n                    </TableCell>\n                  </TableRow>\n                  <Divider />\n                </>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { format } from 'date-fns';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  Divider,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  CardHeader,\n  TableContainer,\n  Typography\n} from '@mui/material';\n// components\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport Scrollbar from '../../Scrollbar';\nimport { fNumber } from '../../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nexport default function AppLotGagnant({ list, user }) {\n  const theme = useTheme();\n\n  return (\n    <Card sx={{ backgroundColor: theme.palette.primary.light, color: 'white' }}>\n      <CardHeader title=\"Superviseur\" sx={{ mb: 3 }} />\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {user?.role === 'superuser' && <TableCell align=\"left\">Compagnie</TableCell>}\n                <TableCell align=\"left\">Superviseur</TableCell>\n                <TableCell align=\"center\">Total Vente</TableCell>\n                <TableCell align=\"right\">Total Pourcentage</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {list?.map((row) => (\n                <>\n                  <TableRow key={row.ref_code}>\n                    {user?.role === 'superuser' && <TableCell sx={{ color: 'white' }}>{row.companyName}</TableCell>}\n                    <TableCell sx={{ color: 'white' }}>{row.supervisor_name}</TableCell>\n                    <TableCell align=\"center\" sx={{ color: 'white' }}>\n                      {fNumber(row.montant_total)}\n                    </TableCell>\n                    <TableCell align=\"right\" sx={{ color: 'white' }}>\n                      {fNumber(row.commission)}\n                    </TableCell>\n                  </TableRow>\n                  <Divider />\n                </>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { format } from 'date-fns';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Card,\n  Table,\n  Button,\n  Divider,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  CardHeader,\n  TableContainer,\n  Typography\n} from '@mui/material';\n// components\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport Scrollbar from '../../Scrollbar';\nimport { fNumber } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nexport default function AppLotGagnant({ rapport }) {\n  const theme = useTheme();\n\n  return (\n    <Card>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableBody>\n              <TableRow key=\"cool\">\n                <TableCell>Tfiche: {rapport?.quantite}</TableCell>\n                <TableCell align=\"center\">Tfiche gagnant: {rapport?.fgagnant}</TableCell>\n                <TableCell align=\"center\">vente: {fNumber(rapport?.montant_total)}</TableCell>\n                <TableCell align=\"right\">A payé: {fNumber(rapport?.perte)}</TableCell>\n              </TableRow>\n              <TableRow key={1}>\n                <TableCell align=\"left\">%Agent: {fNumber(rapport?.commissionA)}</TableCell>\n                <TableCell align=\"center\">balance sans %agent: {fNumber(rapport?.gain_s_percent_agent)}</TableCell>\n                <TableCell align=\"center\" sx={{ px: 1 }} />\n                <TableCell align=\"right\">balance avec %agent: {fNumber(rapport?.gain_a_percent_agent)}</TableCell>\n              </TableRow>\n              <TableRow key={2}>\n                <TableCell align=\"left\">%Superviseur: {fNumber(rapport?.commissionS)}</TableCell>\n                <TableCell align=\"center\">\n                  balance sans %superviseur: {fNumber(rapport?.gain_s_percent_supervisor)}\n                </TableCell>\n                <TableCell align=\"center\" sx={{ px: 1 }} />\n                <TableCell align=\"right\">\n                  balance avec %superviseur: {fNumber(rapport?.gain_a_percent_supervisor)}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fCurrency } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nexport default function AppTotalAnother({\n  text = 'Total',\n  value,\n  bgColor = '#6C00FF',\n  color = 'white',\n  fontSize = 11,\n  type = 'num'\n}) {\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3, backgroundColor: bgColor, color }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\" sx={{ fontSize }}>\n          {text}\n        </Typography>\n        <Typography variant=\"h4\">{type === 'float' ? fCurrency(value) || 0 : value || 0}</Typography>\n      </Box>\n    </Card>\n  );\n}\n"],"sourceRoot":""}