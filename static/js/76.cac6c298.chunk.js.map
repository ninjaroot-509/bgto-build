{"version":3,"sources":["components/_dashboard/factu/list/FactuListHead.js","components/_dashboard/factu/list/FactuListToolbar.js","components/_dashboard/factu/list/FactuMoreMenu.js","pages/dashboard/Facturation.js"],"names":["AgentListHead","_ref","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","_jsx","TableHead","children","TableRow","map","headCell","TableCell","align","alignRight","sortDirection","id","_jsxs","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","styled","Toolbar","theme","height","display","justifyContent","padding","spacing","TracabiliteListToolbar","_ref2","_ref3","onChangeDate1","onChangeDate2","handleGo","value","value1","value2","setValue2","compagnies","loading","setLoading","useTheme","palette","mode","Stack","xs","md","py","px","TextField","fullWidth","select","onChange","target","SelectProps","MenuProps","maxHeight","textTransform","companyname","option","MenuItem","mx","my","borderRadius","typography","DatePicker","inputFormat","newValue","renderInput","params","maxWidth","Tooltip","title","LoadingButton","variant","FactuMoreMenu","_PATH_DASHBOARD$compa","onDelete","factuId","ref","useRef","isOpen","setIsOpen","useState","_Fragment","IconButton","Icon","icon","moreVerticalFill","width","Menu","open","anchorEl","current","onClose","PaperProps","anchorOrigin","vertical","horizontal","transformOrigin","component","RouterLink","to","concat","PATH_DASHBOARD","company","companyFactu","color","ListItemIcon","eyeFill","ListItemText","primary","primaryTypographyProps","TABLE_HEAD","descendingComparator","a","b","Facturation","user","useAuth","themeStretch","useSettings","dispatch","useDispatch","facturations","useSelector","state","page","setPage","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","today","Date","oneMonthAgo","addMonths","setValue","startOfDay","setValue1","useEffect","getCompagnies","emptyRows","Math","max","length","filteredFacturations","array","comparator","query","stabilizedThis","el","index","sort","filter","_tracabiliteAgent","agent_first_name","toLowerCase","indexOf","applySortFilter","getComparator","isFacturationNotFound","Page","Container","HeaderBreadcrumbs","heading","links","name","href","root","Card","FactuListToolbar","datavalue","async","getFacturations","fDate","Scrollbar","TableContainer","minWidth","Table","FactuListHead","handleRequestSort","checked","newSelecteds","n","TableBody","slice","ite","isItemSelected","hover","tabIndex","role","scope","alignItems","Avatar","alt","companyName","src","company_photo","Typography","noWrap","price","agents","total","style","colSpan","SearchNotFound","searchQuery","TablePagination","labelRowsPerPage","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/76.cac6c298.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nAgentListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function AgentListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Stack, Toolbar, Tooltip, IconButton, Typography, TextField, MenuItem } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 6)\n}));\n\n// ----------------------------------------------------------------------\n\nTracabiliteListToolbar.propTypes = {\n  value: PropTypes.string,\n  value1: PropTypes.string,\n  value2: PropTypes.string,\n  setValue2: PropTypes.func,\n  compagnies: PropTypes.array,\n  onChangeDate1: PropTypes.func,\n  onChangeDate2: PropTypes.func,\n  loading: PropTypes.bool,\n  setLoading: PropTypes.func,\n  handleGo: PropTypes.func\n};\n\nexport default function TracabiliteListToolbar({\n  onChangeDate1,\n  onChangeDate2,\n  handleGo,\n  value,\n  value1,\n  value2,\n  setValue2,\n  compagnies,\n  loading,\n  setLoading\n}) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <Stack spacing={2} direction={{ xs: 'column', md: 'row' }} sx={{ py: 2.5, px: 3 }}>\n      <TextField\n        fullWidth\n        select\n        label=\"Compagnie\"\n        value={value2}\n        onChange={(event) => setValue2(event.target.value)}\n        SelectProps={{\n          MenuProps: {\n            sx: { '& .MuiPaper-root': { maxHeight: 260 } }\n          }\n        }}\n        sx={{\n          // maxWidth: { md: INPUT_WIDTH },\n          textTransform: 'capitalize'\n        }}\n      >\n        {[{ id: 0, companyname: 'Tout' }, ...compagnies]?.map((option) => (\n          <MenuItem\n            key={option?.id}\n            value={option?.id}\n            sx={{\n              mx: 1,\n              my: 0.5,\n              borderRadius: 0.75,\n              typography: 'body2',\n              textTransform: 'capitalize'\n            }}\n          >\n            {option?.companyname}\n          </MenuItem>\n        ))}\n      </TextField>\n      <DatePicker\n        label=\"Date de début\"\n        value={value}\n        inputFormat=\"yyyy-MM-dd\"\n        onChange={(newValue) => {\n          onChangeDate1(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: 300 }\n            }}\n          />\n        )}\n      />\n      <DatePicker\n        label=\"Date de fin\"\n        value={value1}\n        inputFormat=\"yyyy-MM-dd\"\n        onChange={(newValue) => {\n          onChangeDate2(newValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            fullWidth\n            sx={{\n              maxWidth: { md: 300 }\n            }}\n          />\n        )}\n      />\n      <Tooltip title=\"Filter list\">\n        <LoadingButton sx={{ py: 2, px: 3 }} loading={loading} variant=\"contained\" onClick={handleGo}>\n          Filtrer\n        </LoadingButton>\n      </Tooltip>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nFactuMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  factuId: PropTypes.number\n};\n\nexport default function FactuMoreMenu({ onDelete, factuId }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.company?.companyFactu}/${factuId}/pdf`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={eyeFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Voir en PDF\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { addMonths, startOfDay } from 'date-fns';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getFacturations, getCompagnies } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { FactuListHead, FactuListToolbar, FactuMoreMenu } from '../../components/_dashboard/factu/list';\nimport { fDate, fDateTime } from '../../utils/formatTime';\nimport useAuth from '../../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Compagnie', alignRight: false },\n  { id: 'price', label: 'Prix', alignRight: false },\n  { id: 'nb_agents', label: 'nombres agents', alignRight: false },\n  { id: 'total', label: 'Total', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array?.map((el, index) => [el, index]);\n  stabilizedThis?.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(\n      array,\n      (_tracabiliteAgent) => _tracabiliteAgent?.agent_first_name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n  return stabilizedThis?.map((el) => el[0]);\n}\n\nexport default function Facturation() {\n  const { user } = useAuth();\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { facturations, compagnies } = useSelector((state) => state.user);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('first_name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const today = new Date();\n  const oneMonthAgo = addMonths(today, -1);\n  const [value, setValue] = useState(startOfDay(oneMonthAgo));\n  const [value1, setValue1] = useState(startOfDay(today));\n  const [value2, setValue2] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const onChangeDate1 = (datavalue) => {\n    setValue(datavalue);\n  };\n  const onChangeDate2 = (datavalue) => {\n    setValue1(datavalue);\n  };\n  const handleGo = async () => {\n    setLoading(true);\n    await dispatch(getFacturations(fDate(value), fDate(value1), value2));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    // handleGo();\n    dispatch(getCompagnies());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = facturations?.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - facturations.length) : 0;\n\n  const filteredFacturations = applySortFilter(facturations, getComparator(order, orderBy), filterName);\n\n  const isFacturationNotFound = filteredFacturations?.length === 0;\n\n  return (\n    <Page title=\"Facturation: List | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Liste Facturation\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Facturation', href: PATH_DASHBOARD.company.companyFactu },\n            { name: 'Listes' }\n          ]}\n        />\n\n        <Card>\n          <FactuListToolbar\n            value={value}\n            value1={value1}\n            value2={value2}\n            setValue2={setValue2}\n            compagnies={compagnies}\n            onChangeDate1={onChangeDate1}\n            onChangeDate2={onChangeDate2}\n            handleGo={handleGo}\n            loading={loading}\n            setLoading={setLoading}\n          />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <FactuListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={facturations?.length}\n                  numSelected={selected?.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {(rowsPerPage > 0\n                    ? filteredFacturations?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    : filteredFacturations\n                  )?.map((ite) => {\n                    const isItemSelected = selected.indexOf(ite?.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={ite?.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={ite?.companyName} src={ite?.company_photo} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {ite?.companyName}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{ite?.price}</TableCell>\n                        <TableCell align=\"left\">{ite?.agents}</TableCell>\n                        <TableCell align=\"left\">{ite?.total}</TableCell>\n                        <TableCell align=\"right\">\n                          <FactuMoreMenu factuId={ite?.id} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isFacturationNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            labelRowsPerPage=\"Lignes par page\"\n            rowsPerPageOptions={[25, 50, 75, 100, { label: 'Tout', value: -1 }]}\n            component=\"div\"\n            count={facturations?.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}