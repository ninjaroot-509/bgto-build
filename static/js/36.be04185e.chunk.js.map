{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","../node_modules/@iconify/icons-eva/plus-fill.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/_dashboard/tirageauto/AutoNewForm.js","pages/dashboard/TirageAuto.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fData","HeaderBreadcrumbs","_ref","links","action","heading","moreLink","sx","other","_jsxs","Box","mb","children","display","alignItems","flexGrow","_jsx","Typography","variant","gutterBottom","MBreadcrumbs","flexShrink","mt","isString","Link","href","target","map","noWrap","exports","__esModule","default","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","concat","grey","opacity","cursor","breakpoints","up","overflow","position","transition","transitions","create","RootStyle","width","height","margin","DropZoneStyle","zIndex","PlaceholderStyle","_ref2","color","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","file","caption","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","useDropzone","multiple","ShowRejectionItems","Paper","py","px","my","borderColor","bgcolor","alpha","main","_ref4","errors","path","size","e","component","message","code","_Fragment","alt","src","preview","objectFit","className","Icon","icon","roundAddAPhoto","length","typography","subtitle2","minWidth","AutoNewForm","navigate","useNavigate","user","useDispatch","useAuth","enqueueSnackbar","useSnackbar","NewAutoSchema","Yup","tirage_1","required","tirage_2","tirage_3","info_tirage_id","date","nullable","formik","useFormik","enableReinitialize","initialValues","fDateOnly","Date","validationSchema","onSubmit","async","values","setSubmitting","resetForm","setErrors","body","dataBody","Request","handleAddAuto","PATH_DASHBOARD","tirage","list","alert","JSON","stringify","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","FormikProvider","value","Form","noValidate","autoComplete","Grid","container","item","xs","md","Card","p","Stack","direction","sm","TextField","select","fullWidth","label","placeholder","SelectProps","native","Boolean","id","name","option","code_name","DatePicker","inputFormat","onChange","renderInput","params","LoadingButton","type","loading","TirageAuto","_PATH_DASHBOARD$tirag","themeStretch","useSettings","Page","title","Container","maxWidth","root","newTirageAuto"],"mappings":"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","file":"static/js/36.be04185e.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0,0' : '0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","const data = {\n\t\"width\": 24,\n\t\"height\": 24,\n\t\"body\": \"<g id=\\\"evaPlusFill0\\\"><g id=\\\"evaPlusFill1\\\"><path id=\\\"evaPlusFill2\\\" fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2Z\\\"/></g></g>\"\n};\nexports.__esModule = true;\nexports.default = data;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex'\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                        }\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Paper, Box, Typography } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer'\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          }),\n          ...(file && { padding: '12% 0' })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)'\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, Paper } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9\n    }\n  }\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&:hover': { opacity: 0.72 }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter'\n            })\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 }\n              })\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import * as Yup from 'yup';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n  Switch,\n  Typography\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { styled } from '@mui/material/styles';\nimport Request from '../../../utils/Request';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { fData } from '../../../utils/formatNumber';\nimport useAuth from '../../../hooks/useAuth';\nimport { fDateOnly } from '../../../utils/formatTime';\n// ----------------------------------------------------------------------\n\nAutoNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentCompagniePayment: PropTypes.object\n};\n\nconst LabelStyle = styled('div')(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  minWidth: 160\n}));\n\nexport default function AutoNewForm() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const TIRAGE = [\n    { id: 'NYM', name: 'New York Midi' },\n    { id: 'NYS', name: 'New York Soir' },\n    { id: 'FLM', name: 'Florida Midi' },\n    { id: 'FLS', name: 'Florida Soir' },\n    { id: 'GGMT', name: 'Georgia Matin' },\n    { id: 'GGMD', name: 'Georgia Soir' },\n    { id: 'GGS', name: 'Georgia Nuit' },\n    { id: 'TXMA', name: 'Texas Matin' },\n    { id: 'TXM', name: 'Texas Midi' },\n    { id: 'TXS', name: 'Texas Soir' },\n    { id: 'CGM', name: 'Chicago Midi' },\n    { id: 'CGS', name: 'Chicago Soir' },\n    { id: 'LCM', name: 'Lave chodyè Matin' },\n    { id: 'LCS', name: 'Lave chodyè Soir' },\n    { id: 'TNM', name: 'Tennessee Matin' },\n    { id: 'TNMD', name: 'Tennessee Midi' },\n    { id: 'TNS', name: 'Tennessee Soir' },\n    { id: 'NJM', name: 'New Jersey Matin' },\n    { id: 'NJMM', name: 'New Jersey Midi' },\n    { id: 'NJS', name: 'New Jersey Soir' },\n    { id: 'ANA', name: 'Anguilla AM (10H)' },\n    { id: 'ANM', name: 'Anguilla Midi' },\n    { id: 'ANS', name: 'Anguilla Soir' },\n    { id: 'ANN', name: 'Anguilla Nuit' },\n    { id: 'RL', name: 'Real' },\n    { id: 'PRM', name: 'Primera Midi' },\n    { id: 'PRS', name: 'Primera Soir' },\n    { id: 'SUA', name: 'Suerte AM' },\n    { id: 'SUS', name: 'Suerte Soir' },\n    { id: 'LK', name: 'Loteka' },\n    { id: 'KL', name: 'King Lottery Noche' },\n    { id: 'NA', name: 'Nacional Midi' },\n    { id: 'NAS', name: 'Nacional Soir' },\n    { id: 'QPL', name: 'Quiniela palé' }\n  ];\n\n  const NewAutoSchema = Yup.object().shape({\n    tirage_1: Yup.string().required('tirage_1 is required').length(3),\n    tirage_2: Yup.string().required('tirage_2 is required').length(2),\n    tirage_3: Yup.string().required('tirage_3 is required').length(2),\n    info_tirage_id: Yup.string().required('Tirage is required'),\n    date: Yup.date().required('date is required').nullable()\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      tirage_1: null,\n      tirage_2: null,\n      tirage_3: null,\n      date: fDateOnly(new Date()),\n      info_tirage_id: null\n    },\n    validationSchema: NewAutoSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      const body = {\n        ...values,\n        date: fDateOnly(values?.date)\n      };\n      try {\n        const dataBody = await Request.handleAddAuto(body);\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(dataBody?.message, { variant: 'success' });\n        navigate(PATH_DASHBOARD.tirage.list);\n      } catch (error) {\n        if (error?.message) {\n          enqueueSnackbar(error?.message, { variant: 'error' });\n        } else {\n          alert(JSON.stringify(error));\n        }\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"tirage\"\n                    placeholder=\"Choisir le tirage\"\n                    {...getFieldProps('info_tirage_id')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.info_tirage_id && errors.info_tirage_id)}\n                    // helperText={touched.info_tirage_id && errors.info_tirage_id}\n                  >\n                    <option value=\"\" />\n                    {TIRAGE.map((option) => (\n                      <option key={option.code_name} value={option.code_name}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </TextField>\n                  <TextField\n                    fullWidth\n                    label=\"Lotto3 et 1er Lot\"\n                    placeholder=\"Lotto3 et 1er Lot\"\n                    {...getFieldProps('tirage_1')}\n                    error={Boolean(touched.tirage_1 && errors.tirage_1)}\n                    // helperText={touched.tirage_1 && errors.tirage_1}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"2 ème Lot\"\n                    placeholder=\"2 ème Lot\"\n                    {...getFieldProps('tirage_2')}\n                    error={Boolean(touched.tirage_2 && errors.tirage_2)}\n                    // helperText={touched.tirage_2 && errors.tirage_2}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"3 ème Lot\"\n                    placeholder=\"3 ème Lot\"\n                    {...getFieldProps('tirage_3')}\n                    error={Boolean(touched.tirage_3 && errors.tirage_3)}\n                    // helperText={touched.tirage_3 && errors.tirage_3}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <DatePicker\n                    label=\"Date du tirage\"\n                    placeholder=\"Entrer la date du tirage\"\n                    inputFormat=\"MM-dd-yyyy\"\n                    {...getFieldProps('date')}\n                    onChange={(date) => setFieldValue('date', date)}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} error={Boolean(touched.date && errors.date)} />\n                    )}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    Sauvegarder les modifications\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation, Link as RouterLink } from 'react-router-dom';\n// material\nimport { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Container, Button, Stack } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getPrimeConfs } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport AutoNewForm from '../../components/_dashboard/tirageauto/AutoNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function TirageAuto() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  return (\n    <Page title=\"Tirage Automatique | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Tirage Automatique\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Tirage Automatique', href: PATH_DASHBOARD.tirage?.newTirageAuto }\n          ]}\n        />\n\n        <AutoNewForm />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}