{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/_dashboard/companyPayment/CompanyPaymentNewForm.js","pages/dashboard/CompanyPaymentCreate.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fData","HeaderBreadcrumbs","_ref","links","action","heading","moreLink","sx","other","_jsxs","Box","mb","children","display","alignItems","flexGrow","_jsx","Typography","variant","gutterBottom","MBreadcrumbs","flexShrink","mt","isString","Link","href","target","map","noWrap","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","concat","grey","opacity","cursor","breakpoints","up","overflow","position","transition","transitions","create","RootStyle","width","height","margin","DropZoneStyle","zIndex","PlaceholderStyle","_ref2","color","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","file","caption","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","useDropzone","multiple","ShowRejectionItems","Paper","py","px","my","borderColor","bgcolor","alpha","main","_ref4","errors","path","size","e","component","message","code","_Fragment","alt","src","preview","objectFit","className","Icon","icon","roundAddAPhoto","length","typography","subtitle2","minWidth","CompanyPaymentNewForm","isEdit","currentCompagniePayment","navigate","useNavigate","dispatch","useDispatch","user","useAuth","compagnies","useSelector","state","enqueueSnackbar","useSnackbar","NewCompanyPaymentSchema","Yup","company_id","required","nb_agent","montant","balance","today","Date","year","getFullYear","month","getMonth","day","getDate","currentDate","formik","useFormik","enableReinitialize","initialValues","date","created_on","exp_date","expiry_date","paymentId","id","validationSchema","onSubmit","async","values","setSubmitting","resetForm","setErrors","body","fDate","Request","handleModifyCompanyPayment","handleAddCompanyPayment","getCompanyPayment","PATH_DASHBOARD","company","companyPayment","alert","JSON","stringify","useEffect","getCompagnies","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","FormikProvider","value","Form","noValidate","autoComplete","Grid","container","item","xs","md","Card","p","Stack","direction","sm","TextField","select","fullWidth","label","placeholder","SelectProps","native","Boolean","option","companyname","DatePicker","disabled","inputFormat","onChange","renderInput","params","expirydate","LoadingButton","type","loading","CompanyPaymentCreate","_PATH_DASHBOARD$compa","themeStretch","useSettings","pathname","useLocation","useParams","includes","find","payment","currentCompagniePaymentLoaded","setCurrentCompagniePaymentLoaded","useState","Page","title","Container","maxWidth","name","root"],"mappings":"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","file":"static/js/46.6b7311b6.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0,0' : '0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object\n};\n\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex'\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                        }\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\">Upload files</Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Paper, Box, Typography } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  textAlign: 'center',\n  position: 'relative',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 0),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': {\n    opacity: 0.72,\n    cursor: 'pointer'\n  },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  sx: PropTypes.object\n};\n\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          }),\n          ...(file && { padding: '12% 0' })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n\n        {file && (\n          <Box\n            component=\"img\"\n            alt=\"file preview\"\n            src={isString(file) ? file : file.preview}\n            sx={{\n              top: 8,\n              borderRadius: 1,\n              objectFit: 'cover',\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)'\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </Box>\n  );\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, Paper } from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9\n    }\n  }\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&:hover': { opacity: 0.72 }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  caption: PropTypes.node,\n  sx: PropTypes.object\n};\n\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        my: 2,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <>\n      <RootStyle sx={sx}>\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n            ...((isDragReject || error) && {\n              color: 'error.main',\n              borderColor: 'error.light',\n              bgcolor: 'error.lighter'\n            })\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Box\n              component=\"img\"\n              alt=\"avatar\"\n              src={isString(file) ? file : file.preview}\n              sx={{ zIndex: 8, objectFit: 'cover' }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 }\n              })\n            }}\n          >\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {caption}\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n    </>\n  );\n}\n","import * as Yup from 'yup';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n  Switch,\n  Typography\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { styled } from '@mui/material/styles';\nimport Request from '../../../utils/Request';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\nimport { UploadAvatar } from '../../upload';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getCompanyPayment, getCompagnies } from '../../../redux/slices/user';\nimport { fData } from '../../../utils/formatNumber';\nimport useAuth from '../../../hooks/useAuth';\nimport { fDate } from '../../../utils/formatTime';\n// ----------------------------------------------------------------------\n\nCompanyPaymentNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentCompagniePayment: PropTypes.object\n};\n\nconst LabelStyle = styled('div')(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  minWidth: 160\n}));\n\nexport default function CompanyPaymentNewForm({ isEdit, currentCompagniePayment }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { compagnies } = useSelector((state) => state.user);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewCompanyPaymentSchema = Yup.object().shape({\n    company_id: Yup.string().required('compagnie is required'),\n    nb_agent: Yup.number().required('nombres agents is required'),\n    montant: Yup.number().required('montant is required'),\n    balance: Yup.number().required('balance is required')\n  });\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1; // Adding 1 because getMonth() returns a zero-based value\n  const day = today.getDate() + 1;\n\n  const currentDate = `${year}-${month}-${day}`;\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      company_id: currentCompagniePayment?.company_id || null,\n      nb_agent: currentCompagniePayment?.nb_agent || 0,\n      montant: currentCompagniePayment?.montant || 0,\n      balance: currentCompagniePayment?.balance || 0,\n      date: currentCompagniePayment?.created_on || currentDate,\n      exp_date: currentCompagniePayment?.expiry_date || currentDate,\n      paymentId: currentCompagniePayment?.id\n    },\n    validationSchema: NewCompanyPaymentSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      const body = {\n        ...values,\n        date: fDate(values?.date),\n        exp_date: fDate(values?.exp_date)\n      };\n      try {\n        if (isEdit) {\n          await Request.handleModifyCompanyPayment(body);\n        } else {\n          await Request.handleAddCompanyPayment(body);\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Créer avec succès' : 'Mettre à jour avec succès', { variant: 'success' });\n        getCompanyPayment();\n        navigate(PATH_DASHBOARD.company.companyPayment);\n      } catch (error) {\n        if (error?.message) {\n          enqueueSnackbar(error?.message, { variant: 'error' });\n        } else {\n          alert(JSON.stringify(error));\n        }\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  useEffect(() => {\n    dispatch(getCompagnies());\n  }, [dispatch]);\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"compagnie\"\n                    placeholder=\"Choisir le compagnie\"\n                    {...getFieldProps('company_id')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.company_id && errors.company_id)}\n                    // helperText={touched.company_id && errors.company_id}\n                  >\n                    <option value=\"\" />\n                    {compagnies?.map((option) => (\n                      <option key={option.id} value={option.id}>\n                        {option.companyname}\n                      </option>\n                    ))}\n                  </TextField>\n                  <TextField\n                    fullWidth\n                    label=\"Nombres agents\"\n                    placeholder=\"Entrer le nombres agents\"\n                    {...getFieldProps('nb_agent')}\n                    error={Boolean(touched.nb_agent && errors.nb_agent)}\n                    // helperText={touched.nb_agent && errors.nb_agent}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Montant\"\n                    placeholder=\"Entrer le Montant\"\n                    {...getFieldProps('montant')}\n                    error={Boolean(touched.montant && errors.montant)}\n                    // helperText={touched.montant && errors.montant}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Balance\"\n                    placeholder=\"Entrer la Balance\"\n                    {...getFieldProps('balance')}\n                    error={Boolean(touched.balance && errors.balance)}\n                    // helperText={touched.balance && errors.balance}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <DatePicker\n                    disabled={isEdit}\n                    label=\"Date du paiment\"\n                    placeholder=\"Entrer la date du paiment\"\n                    inputFormat=\"yyyy-MM-dd\"\n                    {...getFieldProps('date')}\n                    onChange={(date) => setFieldValue('date', date)}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} error={Boolean(touched.date && errors.date)} />\n                    )}\n                  />\n                  <DatePicker\n                    label=\"Date D'expiration\"\n                    placeholder=\"Entrer la date expiration\"\n                    inputFormat=\"yyyy-MM-dd\"\n                    {...getFieldProps('exp_date')}\n                    onChange={(expirydate) => setFieldValue('exp_date', expirydate)}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} error={Boolean(touched.exp_date && errors.exp_date)} />\n                    )}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Créer le paiment' : 'Sauvegarder les modifications'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getCompanyPayment } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport CompanyPaymentNewForm from '../../components/_dashboard/companyPayment/CompanyPaymentNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function CompanyPaymentCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { paymentId } = useParams();\n  const { companyPayment } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentCompagniePayment = companyPayment?.find((payment) => payment?.id === Number(paymentId));\n  const [currentCompagniePaymentLoaded, setCurrentCompagniePaymentLoaded] = useState(false);\n  useEffect(() => {\n    if (currentCompagniePayment) {\n      setCurrentCompagniePaymentLoaded(true);\n    }\n  }, [currentCompagniePayment]);\n\n  useEffect(() => {\n    // Load data on the initial render\n    dispatch(getCompanyPayment());\n  }, []);\n\n  return (\n    <Page title=\"Paiment: Créer un nouvel Paiment | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Créer un nouvel Paiment' : 'Modifier Paiment'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Paiment', href: PATH_DASHBOARD.company?.companyPayment },\n            { name: !isEdit ? 'Nouvel Paiment' : 'Modification' }\n          ]}\n        />\n\n        {(!isEdit || currentCompagniePaymentLoaded) && (\n          <CompanyPaymentNewForm isEdit={isEdit} currentCompagniePayment={currentCompagniePayment} />\n        )}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}