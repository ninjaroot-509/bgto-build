{"version":3,"sources":["components/_dashboard/supervisor/SupervisorNewForm.js","pages/dashboard/SupervisorCreate.js"],"names":["styled","_ref","theme","typography","subtitle2","minWidth","SupervisorNewForm","_ref2","isEdit","currentSupervisor","navigate","useNavigate","dispatch","useDispatch","user","useAuth","enqueueSnackbar","useSnackbar","countries","city","useSelector","state","showPassword","setShowPassword","useState","open","setOpen","NewSupervisorSchema","Yup","shape","username","min","max","required","first_name","last_name","c_percent","integer","phone","addresse_complet","country_id","city_id","genre","birth_date","nullable","password","formik","useFormik","enableReinitialize","initialValues","country","user_photo","block","is_owner","supervisorId","id","perms","validationSchema","onSubmit","async","values","_ref3","setSubmitting","resetForm","setErrors","formData","FormData","append","fDate","JSON","stringify","map","codename","_PATH_DASHBOARD$super","Request","handleModifySupervisor","handleAddSupervisor","variant","getSupervisors","PATH_DASHBOARD","supervisor","list","error","message","alert","useEffect","getCountries","getCity","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","left","setLeft","React","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","_jsx","FormikProvider","value","children","Form","noValidate","autoComplete","Grid","container","spacing","item","xs","md","Card","sx","p","_jsxs","Stack","handlePermission","PERMISSIONS","SUPERVISOR_OWNER","Box","mb","UploadAvatar","accept","maxSize","onDrop","Boolean","caption","Typography","mt","mx","display","textAlign","color","fData","FormHelperText","px","direction","sm","TextField","fullWidth","label","placeholder","select","SelectProps","native","code_name","name","option","DatePicker","inputFormat","onChange","date","renderInput","params","optio","disabled","CHANGE_PASSWORD_SUP","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","prev","Icon","icon","eyeFill","eyeOffFill","FormControlLabel","control","Switch","checked","labelPlacement","Transfert","leftArr","right","setRight","newPerms","justifyContent","LoadingButton","loading","SupervisorCreate","themeStretch","useSettings","pathname","useLocation","useParams","supervisors","includes","find","superviso","Number","currentSupervisorLoaded","setCurrentSupervisorLoaded","Page","title","Container","maxWidth","HeaderBreadcrumbs","heading","links","href","root"],"mappings":"whBAiDmBA,YAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,IAC5CC,EAAMC,WAAWC,UACpBC,SAAU,IACX,IAEc,SAASC,EAAiBC,GAAiC,IAAhC,OAAEC,EAAM,kBAAEC,GAAmBF,EACrE,MAAMG,EAAWC,cACXC,EAAWC,eACX,KAAEC,GAASC,eACX,gBAAEC,GAAoBC,eACtB,UAAEC,EAAS,KAAEC,GAASC,aAAaC,GAAUA,EAAMP,QAKlDQ,EAAcC,GAAmBC,oBAAS,IAC1CC,EAAMC,GAAWF,oBAAS,GAE3BG,EAAsBC,MAAaC,MAAM,CAC7CC,SAAUF,MAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,wBAC1EC,WAAYN,MAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,yBAC5EE,UAAWP,MAAaG,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,wBAC3EG,UAAWR,MAAaS,UAAUJ,SAAS,uBAC3CK,MAAOV,MAAaS,UAAUJ,SAAS,4BACvCM,iBAAkBX,MAAaK,SAAS,gCACxCO,WAAYZ,MAAaK,SAAS,uBAClCQ,QAASb,MAAaK,SAAS,oBAC/BS,MAAOd,MAAaK,SAAS,qBAC7BU,WAAYf,MAAWK,SAAS,0BAA0BW,WAC1DC,SAAUjB,MAAagB,WAAWb,IAAI,EAAG,uDAGrCe,EAASC,YAAU,CACvBC,oBAAoB,EACpBC,cAAe,CACbnB,UAA2B,OAAjBrB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBqB,WAAY,KACzCQ,OAAwB,OAAjB7B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB6B,QAAS,KACnCJ,YAA6B,OAAjBzB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmByB,aAAc,KAC7CC,WAA4B,OAAjB1B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB0B,YAAa,KAC3CQ,YAA6B,OAAjBlC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBkC,aAAc,KAC7CP,WAA4B,OAAjB3B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB2B,YAAa,KAC3CG,kBAAmC,OAAjB9B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB8B,mBAAoB,KACzDC,YAA6B,OAAjB/B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmByC,UAAW,KAC1CT,SAA0B,OAAjBhC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBU,OAAQ,KACpCuB,OAAwB,OAAjBjC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBiC,QAAS,KACnCS,YAA6B,OAAjB1C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB0C,aAAc,KAC7CN,SAAU,KACVO,MAAwB,OAAjB3C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB2C,MAC1BC,SAA2B,OAAjB5C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB4C,SAC7BC,aAA+B,OAAjB7C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB8C,GACjCC,OAAwB,OAAjB/C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+C,QAAS,IAErCC,iBAAkB9B,EAClB+B,SAAUC,MAAOC,EAAMC,KAA+C,IAA7C,cAAEC,EAAa,UAAEC,EAAS,UAAEC,GAAWH,EAC9D,MAAMI,EAAW,IAAIC,SACrBD,EAASE,OAAO,WAAYP,EAAO9B,WACtB,IAATL,GACFwC,EAASE,OAAO,aAAcP,EAAOT,YAEvCc,EAASE,OAAO,aAAcP,EAAO1B,YACrC+B,EAASE,OAAO,YAAaP,EAAOzB,WACpC8B,EAASE,OAAO,QAASP,EAAOtB,OAChC2B,EAASE,OAAO,aAAcC,YAAY,OAANR,QAAM,IAANA,OAAM,EAANA,EAAQjB,aACpB,OAApBiB,EAAOf,UACToB,EAASE,OAAO,WAAYP,EAAOf,UAErCoB,EAASE,OAAO,YAAaP,EAAOxB,WACpC6B,EAASE,OAAO,aAAcP,EAAOpB,YACrCyB,EAASE,OAAO,mBAAoBP,EAAOrB,kBAC3C0B,EAASE,OAAO,UAAWP,EAAOnB,SAClCwB,EAASE,OAAO,QAASP,EAAOlB,OAChCuB,EAASE,OAAO,eAAgBP,EAAON,cACvCW,EAASE,OAAO,QAASE,KAAKC,UAAgB,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQJ,MAAMe,KAAKC,GAAaA,EAASA,aACjFP,EAASE,OAAO,QAASP,EAAOR,MAAQ,OAAS,SACjDa,EAASE,OAAO,WAAYP,EAAOP,SAAW,OAAS,SACvD,IAAK,IAADoB,EACEjE,QACIkE,IAAQC,uBAAuBV,SAE/BS,IAAQE,oBAAoBX,GAEpCF,IACAD,GAAc,GACd9C,EAAiBR,EAA+B,kCAAtB,0BAAmD,CAAEqE,QAAS,YACxFC,cACApE,EAAkC,QAA1B+D,EAACM,IAAeC,kBAAU,IAAAP,OAAA,EAAzBA,EAA2BQ,KACtC,CAAE,MAAOC,GACE,OAALA,QAAK,IAALA,KAAOC,QACTnE,EAAqB,OAALkE,QAAK,IAALA,OAAK,EAALA,EAAOC,QAAS,CAAEN,QAAS,UAE3CO,MAAMf,KAAKC,UAAUY,IAEvBpB,GAAc,GACdE,EAAUkB,EACZ,KAIJG,qBAAU,KACRzE,EAASkE,eACTlE,EAAS0E,eACT1E,EAAS2E,cAAU,GAClB,CAAC3E,IAEJ,MAAM,OAAE4E,EAAM,OAAE5B,EAAM,QAAE6B,EAAO,aAAEC,EAAY,aAAEC,EAAY,cAAEC,EAAa,cAAEC,IAAkB/C,GAEvFgD,GAAMC,IAAWC,YAAmB,OAAJlF,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,QAAS,IAKhDyC,GAAaC,uBAChBC,IACC,MAAMC,EAAOD,EAAc,GAEvBC,GACFR,EACE,aACAS,OAAOC,OAAOF,EAAM,CAClBG,QAASC,IAAIC,gBAAgBL,MAInC1E,GAAQ,EAAK,GAEf,CAACkE,IAGH,OACEc,cAACC,IAAc,CAACC,MAAO9D,EAAO+D,SAC5BH,cAACI,IAAI,CAACC,YAAU,EAACC,aAAa,MAAMtD,SAAUgC,EAAamB,SACzDH,cAACO,IAAI,CAACC,WAAS,EAACC,QAAS,EAAEN,SACzBH,cAACO,IAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAGT,SACxBH,cAACa,IAAI,CAACC,GAAI,CAAEC,EAAG,GAAIZ,SACjBa,eAACC,IAAK,CAACR,QAAS,EAAEN,SAAA,CACfe,YAAqB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,MAAOqE,IAAYC,mBACzCpB,cAACiB,IAAK,CAAAd,SACJa,eAACK,IAAG,CAACP,GAAI,CAAEQ,GAAI,GAAInB,SAAA,CACjBH,cAACuB,IAAY,CACXC,OAAO,UACP9B,KAAMxC,EAAOT,WACbgF,QAAS,QACTC,OAAQnC,GACRf,MAAOmD,QAAQ5C,EAAQtC,YAAcqC,EAAOrC,YAC5CmF,QACEZ,eAACa,IAAU,CACT1D,QAAQ,UACR2C,GAAI,CACFgB,GAAI,EACJC,GAAI,OACJC,QAAS,QACTC,UAAW,SACXC,MAAO,kBACP/B,SAAA,CACH,+BAECH,cAAA,SAAM,gBAAcmC,YAAM,cAIhCnC,cAACoC,IAAc,CAAC5D,OAAK,EAACsC,GAAI,CAAEuB,GAAI,EAAGJ,UAAW,UAAW9B,SACtDpB,EAAQtC,YAAcqC,EAAOrC,kBAKtCuE,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAU4B,GAAI,OAAS9B,QAAS,CAAEE,GAAI,EAAG4B,GAAI,GAAIpC,SAAA,CACvEH,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,aACNC,YAAY,0BACRxD,GAAc,YAClBX,MAAOmD,QAAQ5C,EAAQ3D,UAAY0D,EAAO1D,YAG5C4E,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,+BACNC,YAAY,4CACRxD,GAAc,SAClBX,MAAOmD,QAAQ5C,EAAQnD,OAASkD,EAAOlD,YAI3CoF,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAU4B,GAAI,OAAS9B,QAAS,CAAEE,GAAI,EAAG4B,GAAI,GAAIpC,SAAA,CACvEH,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,YACNC,YAAY,yBACRxD,GAAc,cAClBX,MAAOmD,QAAQ5C,EAAQvD,YAAcsD,EAAOtD,cAG9CwE,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,iBACNC,YAAY,8BACRxD,GAAc,aAClBX,MAAOmD,QAAQ5C,EAAQtD,WAAaqD,EAAOrD,gBAI/CuE,cAACiB,IAAK,CAAAd,SACJH,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,aACNC,YAAY,2BACRxD,GAAc,aAClBX,MAAOmD,QAAQ5C,EAAQrD,WAAaoD,EAAOpD,eAK/CsF,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAU4B,GAAI,OAAS9B,QAAS,CAAEE,GAAI,EAAG4B,GAAI,GAAIpC,SAAA,CACvEa,eAACwB,IAAS,CACRI,QAAM,EACNH,WAAS,EACTC,MAAM,QACNC,YAAY,sBACRxD,GAAc,SAClB0D,YAAa,CAAEC,QAAQ,GACvBtE,MAAOmD,QAAQ5C,EAAQ/C,OAAS8C,EAAO9C,OACvCmE,SAAA,CAEAH,cAAA,UAAQE,MAAM,KArNlB,CACZ,CAAErD,GAAI,EAAGkG,UAAW,IAAKC,KAAM,QAC/B,CAAEnG,GAAI,EAAGkG,UAAW,IAAKC,KAAM,WAoNRnF,KAAKoF,GACVjD,cAAA,UAA+BE,MAAO+C,EAAOF,UAAU5C,SACpD8C,EAAOD,MADGC,EAAOF,gBAKxB/C,cAACkD,IAAU,CACTR,MAAM,oBACNC,YAAY,8BACZQ,YAAY,gBACRhE,GAAc,cAClBiE,SAAWC,GAASnE,EAAc,aAAcmE,GAChDC,YAAcC,GACZvD,cAACwC,IAAS,CAACC,WAAS,KAAKc,EAAQ/E,MAAOmD,QAAQ5C,EAAQ9C,YAAc6C,EAAO7C,mBAIlF0F,QAAQ5C,EAAQ9C,YAAc6C,EAAO7C,aACpC+D,cAACoC,IAAc,CAACtB,GAAI,CAAEuB,GAAI,GAAK7D,OAAK,EAAA2B,SACjCrB,EAAO7C,aAIZ+E,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAU4B,GAAI,OAAS9B,QAAS,CAAEE,GAAI,EAAG4B,GAAI,GAAIpC,SAAA,CACvEa,eAACwB,IAAS,CACRI,QAAM,EACNH,WAAS,EACTC,MAAM,OACNC,YAAY,qBACRxD,GAAc,cAClB0D,YAAa,CAAEC,QAAQ,GACvBtE,MAAOmD,QAAQ5C,EAAQjD,YAAcgD,EAAOhD,YAC5CqE,SAAA,CAEAH,cAAA,UAAQE,MAAM,KACJ,OAAT1F,QAAS,IAATA,OAAS,EAATA,EAAWqD,KAAK2F,GACfxD,cAAA,UAAuBE,MAAOsD,EAAM3G,GAAGsD,SACpCqD,EAAMR,MADIQ,EAAM3G,SAKvBmD,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,QACNC,YAAY,sBACRxD,GAAc,WAClBX,MAAOmD,QAAQ5C,EAAQhD,SAAW+C,EAAO/C,cAK7CiF,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAU4B,GAAI,OAAS9B,QAAS,CAAEE,GAAI,EAAG4B,GAAI,GAAIpC,SAAA,CACvEH,cAACwC,IAAS,CACRC,WAAS,EACTC,MAAM,mBACNC,YAAY,+BACRxD,GAAc,oBAClBX,MAAOmD,QAAQ5C,EAAQlD,kBAAoBiD,EAAOjD,oBAGpDmE,cAACwC,IAAS,CACRiB,UAAWvC,YAAqB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,MAAOqE,IAAYuC,qBACrDjB,WAAS,EACTnC,aAAa,mBACbqD,KAAM/I,EAAe,OAAS,WAC9B8H,MAAM,kBACFvD,GAAc,YAClByE,WAAY,CACVC,aACE7D,cAAC8D,IAAc,CAACC,SAAS,MAAK5D,SAC5BH,cAACgE,IAAU,CAACC,KAAK,MAAMC,QAASA,IAAMrJ,GAAiBsJ,IAAUA,IAAMhE,SACrEH,cAACoE,IAAI,CAACC,KAAMzJ,EAAe0J,IAAUC,WAK7C/F,MAAOmD,QAAQ5C,EAAQ5C,UAAY2C,EAAO3C,eAK9C6E,eAACC,IAAK,CAACqB,UAAW,CAAE3B,GAAI,SAAUC,GAAI,OAASH,QAAS,EAAEN,SAAA,CACxDH,cAACwE,IAAgB,CACfC,QACEzE,cAAC0E,IAAM,IACDvF,GAAc,SAClBwF,QAAe,OAANzH,QAAM,IAANA,OAAM,EAANA,EAAQR,MACjBwF,MAAc,OAANhF,QAAM,IAANA,KAAQR,MAAoB,UAAZ,YAG5BkI,eAAe,QACflC,MAAM,UAEPxB,YAAqB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,MAAOqE,IAAYC,mBACzCpB,cAACwE,IAAgB,CACfC,QACEzE,cAAC0E,IAAM,IACDvF,GAAc,YAClBwF,QAAe,OAANzH,QAAM,IAANA,OAAM,EAANA,EAAQP,SACjBuF,MAAc,OAANhF,QAAM,IAANA,KAAQP,SAAuB,UAAZ,YAG/BiI,eAAe,QACflC,MAAM,wBAIZ1C,cAACiB,IAAK,CAAAd,SACJH,cAAC6E,IAAS,CAACC,QAAS1F,GAAM2F,MAAO7H,EAAOJ,MAAOuC,QAASA,GAAS2F,SAlO/DC,IAChB7I,EAAO8C,cAAc,QAAS+F,EAAS,MAoO3BjF,cAACqB,IAAG,CAACP,GAAI,CAAEgB,GAAI,EAAGE,QAAS,OAAQkD,eAAgB,YAAa/E,SAC9DH,cAACmF,IAAa,CAACxB,KAAK,SAASxF,QAAQ,YAAYiH,QAASnG,EAAakB,SACnErG,EAAkC,gCAAzB,0CAU/B,CC1Xe,SAASuL,IAAoB,IAADtH,EACzC,MAAM,aAAEuH,GAAiBC,cACnBrL,EAAWC,eACX,SAAEqL,GAAaC,eACf,aAAE7I,GAAiB8I,eACnB,YAAEC,GAAgBjL,aAAaC,GAAUA,EAAMP,OAC/CN,EAAS0L,EAASI,SAAS,QAC3B7L,EAAoB4L,EAAYE,MAAMC,IAAuB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWjJ,MAAOkJ,OAAOnJ,MAC5EoJ,EAAyBC,GAA8BnL,oBAAS,GAYvE,OAXA6D,qBAAU,KACJ5E,GACFkM,GAA2B,EAC7B,GACC,CAAClM,IAEJ4E,qBAAU,KAERzE,EAASkE,cAAiB,GACzB,IAGD4B,cAACkG,IAAI,CAACC,MAAM,iEAA6DhG,SACvEa,eAACoF,IAAS,CAACC,UAAUf,GAAuB,KAAKnF,SAAA,CAC/CH,cAACsG,IAAiB,CAChBC,QAAUzM,EAAyC,uBAAhC,iCACnB0M,MAAO,CACL,CAAExD,KAAM,YAAayD,KAAMpI,IAAeqI,MAC1C,CAAE1D,KAAM,cAAeyD,KAA+B,QAA3B1I,EAAEM,IAAeC,kBAAU,IAAAP,OAAA,EAAzBA,EAA2B2I,MACxD,CAAE1D,KAAOlJ,EAAgC,eAAvB,2BAInBA,GAAUkM,IACXhG,cAACpG,EAAiB,CAACE,OAAQA,EAAQC,kBAAmBA,QAKhE,C","file":"static/js/82.4e1c6643.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n  Switch,\n  Typography\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { styled } from '@mui/material/styles';\nimport Request from '../../../utils/Request';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\nimport Transfert from '../../Transfert';\nimport { UploadAvatar } from '../../upload';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getSupervisors, getCountries, getCity } from '../../../redux/slices/user';\nimport { fDate } from '../../../utils/formatTime';\nimport { handlePermission } from '../../../utils/handlePermission';\nimport useAuth from '../../../hooks/useAuth';\nimport { PERMISSIONS } from '../../../guards/Permissions';\nimport { fData } from '../../../utils/formatNumber';\n// ----------------------------------------------------------------------\n\nSupervisorNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentSupervisor: PropTypes.object\n};\n\nconst LabelStyle = styled('div')(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  minWidth: 160\n}));\n\nexport default function SupervisorNewForm({ isEdit, currentSupervisor }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  const { countries, city } = useSelector((state) => state.user);\n  const Genre = [\n    { id: 1, code_name: 'M', name: 'Male' },\n    { id: 2, code_name: 'F', name: 'Female' }\n  ];\n  const [showPassword, setShowPassword] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const NewSupervisorSchema = Yup.object().shape({\n    username: Yup.string().min(3, 'Too Short!').max(10, 'Too Long!').required('username is required'),\n    first_name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('FirstName is required'),\n    last_name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('LastName is required'),\n    c_percent: Yup.number().integer().required('Percent is required'),\n    phone: Yup.number().integer().required('Phone number is required'),\n    addresse_complet: Yup.string().required('Addresse complet is required'),\n    country_id: Yup.string().required('Country is required'),\n    city_id: Yup.string().required('City is required'),\n    genre: Yup.string().required('Genre is required'),\n    birth_date: Yup.date().required('birth date is required').nullable(),\n    password: Yup.string().nullable().min(6, 'Password should be of minimum 6 characters length')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      username: currentSupervisor?.username || null,\n      phone: currentSupervisor?.phone || null,\n      first_name: currentSupervisor?.first_name || null,\n      last_name: currentSupervisor?.last_name || null,\n      birth_date: currentSupervisor?.birth_date || null,\n      c_percent: currentSupervisor?.c_percent || null,\n      addresse_complet: currentSupervisor?.addresse_complet || null,\n      country_id: currentSupervisor?.country || null,\n      city_id: currentSupervisor?.city || null,\n      genre: currentSupervisor?.genre || null,\n      user_photo: currentSupervisor?.user_photo || null,\n      password: null,\n      block: currentSupervisor?.block,\n      is_owner: currentSupervisor?.is_owner,\n      supervisorId: currentSupervisor?.id,\n      perms: currentSupervisor?.perms || []\n    },\n    validationSchema: NewSupervisorSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      const formData = new FormData();\n      formData.append('username', values.username);\n      if (open === true) {\n        formData.append('user_photo', values.user_photo);\n      }\n      formData.append('first_name', values.first_name);\n      formData.append('last_name', values.last_name);\n      formData.append('phone', values.phone);\n      formData.append('birth_date', fDate(values?.birth_date));\n      if (values.password !== null) {\n        formData.append('password', values.password);\n      }\n      formData.append('c_percent', values.c_percent);\n      formData.append('country_id', values.country_id);\n      formData.append('addresse_complet', values.addresse_complet);\n      formData.append('city_id', values.city_id);\n      formData.append('genre', values.genre);\n      formData.append('supervisorId', values.supervisorId);\n      formData.append('perms', JSON.stringify(values?.perms.map((codename) => codename.codename)));\n      formData.append('block', values.block ? 'True' : 'False');\n      formData.append('is_owner', values.is_owner ? 'True' : 'False');\n      try {\n        if (isEdit) {\n          await Request.handleModifySupervisor(formData);\n        } else {\n          await Request.handleAddSupervisor(formData);\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Créer avec succès' : 'Mettre à jour avec succès', { variant: 'success' });\n        getSupervisors();\n        navigate(PATH_DASHBOARD.supervisor?.list);\n      } catch (error) {\n        if (error?.message) {\n          enqueueSnackbar(error?.message, { variant: 'error' });\n        } else {\n          alert(JSON.stringify(error));\n        }\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  useEffect(() => {\n    dispatch(getSupervisors());\n    dispatch(getCountries());\n    dispatch(getCity());\n  }, [dispatch]);\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const [left, setLeft] = React.useState(user?.perms || []);\n  const setRight = (newPerms) => {\n    formik.setFieldValue('perms', newPerms);\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      if (file) {\n        setFieldValue(\n          'user_photo',\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        );\n      }\n      setOpen(true);\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                {handlePermission(user?.perms, PERMISSIONS.SUPERVISOR_OWNER) && (\n                  <Stack>\n                    <Box sx={{ mb: 5 }}>\n                      <UploadAvatar\n                        accept=\"image/*\"\n                        file={values.user_photo}\n                        maxSize={3145728}\n                        onDrop={handleDrop}\n                        error={Boolean(touched.user_photo && errors.user_photo)}\n                        caption={\n                          <Typography\n                            variant=\"caption\"\n                            sx={{\n                              mt: 2,\n                              mx: 'auto',\n                              display: 'block',\n                              textAlign: 'center',\n                              color: 'text.secondary'\n                            }}\n                          >\n                            Allowed *.jpeg, *.jpg, *.png\n                            <br /> max size of {fData(3145728)}\n                          </Typography>\n                        }\n                      />\n                      <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                        {touched.user_photo && errors.user_photo}\n                      </FormHelperText>\n                    </Box>\n                  </Stack>\n                )}\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Pseudoname\"\n                    placeholder=\"Entrer le pseudoname\"\n                    {...getFieldProps('username')}\n                    error={Boolean(touched.username && errors.username)}\n                    // helperText={touched.username && errors.username}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Numéro de téléphone\"\n                    placeholder=\"Entrer le numéro de téléphone\"\n                    {...getFieldProps('phone')}\n                    error={Boolean(touched.phone && errors.phone)}\n                    // helperText={touched.phone && errors.phone}\n                  />\n                </Stack>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Prénom\"\n                    placeholder=\"Entrer le prénom\"\n                    {...getFieldProps('first_name')}\n                    error={Boolean(touched.first_name && errors.first_name)}\n                    // helperText={touched.first_name && errors.first_name}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Nom de famille\"\n                    placeholder=\"Entrer le nom de famille\"\n                    {...getFieldProps('last_name')}\n                    error={Boolean(touched.last_name && errors.last_name)}\n                    // helperText={touched.last_name && errors.last_name}\n                  />\n                </Stack>\n                <Stack>\n                  <TextField\n                    fullWidth\n                    label=\"Commission\"\n                    placeholder=\"Entrer le pourcentage\"\n                    {...getFieldProps('c_percent')}\n                    error={Boolean(touched.c_percent && errors.c_percent)}\n                    // helperText={touched.c_percent && errors.c_percent}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Genre\"\n                    placeholder=\"Choisir le genre\"\n                    {...getFieldProps('genre')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.genre && errors.genre)}\n                    // helperText={touched.genre && errors.genre}\n                  >\n                    <option value=\"\" />\n                    {Genre.map((option) => (\n                      <option key={option.code_name} value={option.code_name}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </TextField>\n                  <DatePicker\n                    label=\"Date de naissance\"\n                    placeholder=\"Entrer la date de naissance\"\n                    inputFormat=\"yyyy-MM-dd\"\n                    {...getFieldProps('birth_date')}\n                    onChange={(date) => setFieldValue('birth_date', date)}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} error={Boolean(touched.birth_date && errors.birth_date)} />\n                    )}\n                  />\n                </Stack>\n                {Boolean(touched.birth_date && errors.birth_date) && (\n                  <FormHelperText sx={{ px: 2 }} error>\n                    {errors.birth_date}\n                  </FormHelperText>\n                )}\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Pays\"\n                    placeholder=\"Choisir le Pays\"\n                    {...getFieldProps('country_id')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.country_id && errors.country_id)}\n                    // helperText={touched.country_id && errors.country_id}\n                  >\n                    <option value=\"\" />\n                    {countries?.map((optio) => (\n                      <option key={optio.id} value={optio.id}>\n                        {optio.name}\n                      </option>\n                    ))}\n                  </TextField>\n                  <TextField\n                    fullWidth\n                    label=\"Ville\"\n                    placeholder=\"Choisir la ville\"\n                    {...getFieldProps('city_id')}\n                    error={Boolean(touched.city_id && errors.city_id)}\n                    // helperText={touched.city_id && errors.city_id}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Addresse complet\"\n                    placeholder=\"Entrer l'addresse complet\"\n                    {...getFieldProps('addresse_complet')}\n                    error={Boolean(touched.addresse_complet && errors.addresse_complet)}\n                    // helperText={touched.addresse_complet && errors.addresse_complet}\n                  />\n                  <TextField\n                    disabled={!handlePermission(user?.perms, PERMISSIONS.CHANGE_PASSWORD_SUP)}\n                    fullWidth\n                    autoComplete=\"current-password\"\n                    type={showPassword ? 'text' : 'password'}\n                    label=\"Mot de passe\"\n                    {...getFieldProps('password')}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                            <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                    error={Boolean(touched.password && errors.password)}\n                    // helperText={touched.password && errors.password}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        {...getFieldProps('block')}\n                        checked={values?.block}\n                        color={!values?.block ? 'primary' : 'success'}\n                      />\n                    }\n                    labelPlacement=\"start\"\n                    label=\"Block\"\n                  />\n                  {handlePermission(user?.perms, PERMISSIONS.SUPERVISOR_OWNER) && (\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          {...getFieldProps('is_owner')}\n                          checked={values?.is_owner}\n                          color={!values?.is_owner ? 'primary' : 'success'}\n                        />\n                      }\n                      labelPlacement=\"start\"\n                      label=\"Central Primaire\"\n                    />\n                  )}\n                </Stack>\n                <Stack>\n                  <Transfert leftArr={left} right={values.perms} setLeft={setLeft} setRight={setRight} />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Créer le superviseur' : 'Sauvegarder les modifications'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSupervisors } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport SupervisorNewForm from '../../components/_dashboard/supervisor/SupervisorNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function SupervisorCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { supervisorId } = useParams();\n  const { supervisors } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentSupervisor = supervisors.find((superviso) => superviso?.id === Number(supervisorId));\n  const [currentSupervisorLoaded, setCurrentSupervisorLoaded] = useState(false);\n  useEffect(() => {\n    if (currentSupervisor) {\n      setCurrentSupervisorLoaded(true);\n    }\n  }, [currentSupervisor]);\n\n  useEffect(() => {\n    // Load data on the initial render\n    dispatch(getSupervisors());\n  }, []);\n\n  return (\n    <Page title=\"Superviseur: Créer un nouvel superviseur | RLP Center Lotto\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Créer un nouvel superviseur' : 'Modifier Superviseur'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Superviseur', href: PATH_DASHBOARD.supervisor?.root },\n            { name: !isEdit ? 'Nouvel superviseur' : 'Modification' }\n          ]}\n        />\n\n        {(!isEdit || currentSupervisorLoaded) && (\n          <SupervisorNewForm isEdit={isEdit} currentSupervisor={currentSupervisor} />\n        )}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}